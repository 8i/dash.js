{"version":3,"file":"dash.protection.min.js","mappings":"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","sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/./src/core/FactoryMaker.js","webpack://dashjs/./src/core/Utils.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./node_modules/.pnpm/path-browserify@1.0.1/node_modules/path-browserify/index.js","webpack://dashjs/./node_modules/.pnpm/ua-parser-js@1.0.38/node_modules/ua-parser-js/src/ua-parser.js","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/amd options","webpack://dashjs/webpack/runtime/compat get default export","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/./src/streaming/protection/CommonEncryption.js","webpack://dashjs/./src/streaming/protection/vo/MediaCapability.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemConfiguration.js","webpack://dashjs/./src/streaming/protection/errors/ProtectionErrors.js","webpack://dashjs/./src/streaming/protection/vo/LicenseRequest.js","webpack://dashjs/./src/streaming/protection/vo/LicenseResponse.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionController.js","webpack://dashjs/./src/streaming/protection/vo/KeyPair.js","webpack://dashjs/./src/streaming/protection/vo/ClearKeyKeySet.js","webpack://dashjs/./src/streaming/constants/ProtectionConstants.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemW3CClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemWidevine.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemPlayReady.js","webpack://dashjs/./src/streaming/protection/servers/DRMToday.js","webpack://dashjs/./src/streaming/protection/servers/PlayReady.js","webpack://dashjs/./src/streaming/protection/servers/Widevine.js","webpack://dashjs/./src/streaming/protection/servers/ClearKey.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionKeyController.js","webpack://dashjs/./src/streaming/protection/ProtectionEvents.js","webpack://dashjs/./src/streaming/protection/vo/NeedKey.js","webpack://dashjs/./src/streaming/protection/vo/KeyMessage.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemAccess.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_21Jan2015.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_3Feb2014.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_01b.js","webpack://dashjs/./src/streaming/protection/Protection.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(self, () => {\nreturn ","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n * @ignore\n */\nconst FactoryMaker = (function () {\n\n    let instance;\n    let singletonContexts = [];\n    const singletonFactories = {};\n    const classFactories = {};\n\n    function extend(name, childInstance, override, context) {\n        if (!context[name] && childInstance) {\n            context[name] = {\n                instance: childInstance,\n                override: override\n            };\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (const i in singletonContexts) {\n            const obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (const i in singletonContexts) {\n            const obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({\n            name: className,\n            context: context,\n            instance: instance\n        });\n    }\n\n    /**\n     * Use this method to remove all singleton instances associated with a particular context.\n     *\n     * @param {Object} context\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function deleteSingletonInstances(context) {\n        singletonContexts = singletonContexts.filter(x => x.context !== context);\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Factories storage Management\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function getFactoryByName(name, factoriesArray) {\n        return factoriesArray[name];\n    }\n\n    function updateFactory(name, factory, factoriesArray) {\n        if (name in factoriesArray) {\n            factoriesArray[name] = factory;\n        }\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Class Factories Management\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function updateClassFactory(name, factory) {\n        updateFactory(name, factory, classFactories);\n    }\n\n    function getClassFactoryByName(name) {\n        return getFactoryByName(name, classFactories);\n    }\n\n    function getClassFactory(classConstructor) {\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\n\n        if (!factory) {\n            factory = function (context) {\n                if (context === undefined) {\n                    context = {};\n                }\n                return {\n                    create: function () {\n                        return merge(classConstructor, context, arguments);\n                    }\n                };\n            };\n\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\n        }\n        return factory;\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Singleton Factory MAangement\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function updateSingletonFactory(name, factory) {\n        updateFactory(name, factory, singletonFactories);\n    }\n\n    function getSingletonFactoryByName(name) {\n        return getFactoryByName(name, singletonFactories);\n    }\n\n    function getSingletonFactory(classConstructor) {\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\n        if (!factory) {\n            factory = function (context) {\n                let instance;\n                if (context === undefined) {\n                    context = {};\n                }\n                return {\n                    getInstance: function () {\n                        // If we don't have an instance yet check for one on the context\n                        if (!instance) {\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                        }\n                        // If there's no instance on the context then create one\n                        if (!instance) {\n                            instance = merge(classConstructor, context, arguments);\n                            singletonContexts.push({\n                                name: classConstructor.__dashjs_factory_name,\n                                context: context,\n                                instance: instance\n                            });\n                        }\n                        return instance;\n                    }\n                };\n            };\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\n        }\n\n        return factory;\n    }\n\n    function merge(classConstructor, context, args) {\n\n        let classInstance;\n        const className = classConstructor.__dashjs_factory_name;\n        const extensionObject = context[className];\n\n        if (extensionObject) {\n\n            let extension = extensionObject.instance;\n\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n\n                classInstance = classConstructor.apply({context}, args);\n                extension = extension.apply({\n                    context,\n                    factory: instance,\n                    parent: classInstance\n                }, args);\n\n                for (const prop in extension) {\n                    if (classInstance.hasOwnProperty(prop)) {\n                        classInstance[prop] = extension[prop];\n                    }\n                }\n\n            } else { //replace parent object completely with new object. Same as dijon.\n\n                return extension.apply({\n                    context,\n                    factory: instance\n                }, args);\n\n            }\n        } else {\n            // Create new instance of the class\n            classInstance = classConstructor.apply({context}, args);\n        }\n\n        // Add getClassName function to class instance prototype (used by Debug)\n        classInstance.getClassName = function () {return className;};\n\n        return classInstance;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        deleteSingletonInstances: deleteSingletonInstances,\n        getSingletonFactory: getSingletonFactory,\n        getSingletonFactoryByName: getSingletonFactoryByName,\n        updateSingletonFactory: updateSingletonFactory,\n        getClassFactory: getClassFactory,\n        getClassFactoryByName: getClassFactoryByName,\n        updateClassFactory: updateClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\n\nimport path from 'path-browserify'\nimport { UAParser } from 'ua-parser-js'\n\nclass Utils {\n    static mixin(dest, source, copy) {\n        let s;\n        let empty = {};\n        if (dest) {\n            for (let name in source) {\n                if (source.hasOwnProperty(name)) {\n                    s = source[name];\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\n                            dest[name] = Utils.mixin(dest[name], s, copy);\n                        } else {\n                            dest[name] = copy(s);\n                        }\n                    }\n                }\n            }\n        }\n        return dest;\n    }\n\n    static clone(src) {\n        if (!src || typeof src !== 'object') {\n            return src; // anything\n        }\n        let r;\n        if (src instanceof Array) {\n            // array\n            r = [];\n            for (let i = 0, l = src.length; i < l; ++i) {\n                if (i in src) {\n                    r.push(Utils.clone(src[i]));\n                }\n            }\n        } else {\n            r = {};\n        }\n        return Utils.mixin(r, src, Utils.clone);\n    }\n\n    static addAditionalQueryParameterToUrl(url, params) {\n        try {\n            if (!params || params.length === 0) {\n                return url;\n            }\n\n            let modifiedUrl = new URL(url);\n\n            params.forEach((param) => {\n                if (param.key && param.value) {\n                    modifiedUrl.searchParams.set(param.key, param.value);\n                }\n            });\n\n            return modifiedUrl.href;\n\n\n        } catch (e) {\n            return url;\n        }\n    }\n\n    static parseHttpHeaders(headerStr) {\n        let headers = {};\n        if (!headerStr) {\n            return headers;\n        }\n\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\n        // which send a string starting with a \"\\n\" character\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\n            let headerPair = headerPairs[i];\n            let index = headerPair.indexOf('\\u003a\\u0020');\n            if (index > 0) {\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\n            }\n        }\n        return headers;\n    }\n\n    static generateUuid() {\n        let dt = new Date().getTime();\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    }\n\n    static generateHashCode(string) {\n        let hash = 0;\n\n        if (string.length === 0) {\n            return hash;\n        }\n\n        for (let i = 0; i < string.length; i++) {\n            const chr = string.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0;\n        }\n        return hash;\n    }\n\n    /**\n     * Compares both urls and returns a relative url (target relative to original)\n     * @param {string} originalUrl\n     * @param {string} targetUrl\n     * @return {string|*}\n     */\n    static getRelativeUrl(originalUrl, targetUrl) {\n        try {\n            const original = new URL(originalUrl);\n            const target = new URL(targetUrl);\n\n            // Unify the protocol to compare the origins\n            original.protocol = target.protocol;\n            if (original.origin !== target.origin) {\n                return targetUrl;\n            }\n\n            // Use the relative path implementation of the path library. We need to cut off the actual filename in the end to get the relative path\n            let relativePath = path.relative(original.pathname.substr(0, original.pathname.lastIndexOf('/')), target.pathname.substr(0, target.pathname.lastIndexOf('/')));\n\n            // In case the relative path is empty (both path are equal) return the filename only. Otherwise add a slash in front of the filename\n            const startIndexOffset = relativePath.length === 0 ? 1 : 0;\n            relativePath += target.pathname.substr(target.pathname.lastIndexOf('/') + startIndexOffset, target.pathname.length - 1);\n\n            // Build the other candidate, e.g. the 'host relative' path that starts with \"/\", and return the shortest of the two candidates.\n            if (target.pathname.length < relativePath.length) {\n                return target.pathname;\n            }\n            return relativePath;\n        } catch (e) {\n            return targetUrl\n        }\n    }\n\n    static parseUserAgent(ua = null) {\n        try {\n            const uaString = ua === null ? typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '' : '';\n\n            return UAParser(uaString);\n        }\n        catch(e) {\n            return {};\n        }\n    }\n\n    /**\n     * Checks for existence of \"http\" or \"https\" in a string\n     * @param string\n     * @returns {boolean}\n     */\n    static stringHasProtocol(string) {\n        return (/(http(s?)):\\/\\//i.test(string))\n    }\n}\n\nexport default Utils;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Constants declaration\n * @class\n * @ignore\n * @hideconstructor\n */\nclass Constants {\n\n    init() {\n        /**\n         *  @constant {string} MESH Mesh media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MESH = 'mesh';\n\n        /**\n         *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\n         *  @memberof Constants#\n         *  @static\n         */\n        this.STREAM = 'stream';\n\n        /**\n         *  @constant {string} VIDEO Video media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.VIDEO = 'video';\n\n        /**\n         *  @constant {string} AUDIO Audio media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.AUDIO = 'audio';\n\n        /**\n         *  @constant {string} TEXT Text media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TEXT = 'text';\n\n        /**\n         *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MUXED = 'muxed';\n\n        /**\n         *  @constant {string} IMAGE Image media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.IMAGE = 'image';\n\n        /**\n         *  @constant {string} STPP STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.STPP = 'stpp';\n\n        /**\n         *  @constant {string} TTML STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TTML = 'ttml';\n\n        /**\n         *  @constant {string} VTT STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.VTT = 'vtt';\n\n        /**\n         *  @constant {string} WVTT STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.WVTT = 'wvtt';\n\n        /**\n         *  @constant {string} Content Steering\n         *  @memberof Constants#\n         *  @static\n         */\n        this.CONTENT_STEERING = 'contentSteering';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_DYNAMIC Dynamic Adaptive bitrate algorithm\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_DYNAMIC = 'abrDynamic';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_BOLA Adaptive bitrate algorithm based on Bola (buffer level)\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_BOLA = 'abrBola';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_L2A Adaptive bitrate algorithm based on L2A (online learning)\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_L2A = 'abrL2A';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_LoLP Adaptive bitrate algorithm based on LoL+\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_LoLP = 'abrLoLP';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_THROUGHPUT Adaptive bitrate algorithm based on throughput\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput';\n\n        /**\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALUCUALTION_DOWNLOADED_DATA Throughput calculation based on downloaded data array\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA = 'abrFetchThroughputCalculationDownloadedData';\n\n        /**\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING = 'abrFetchThroughputCalculationMoofParsing';\n\n        /**\n        *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_AAST Throughput calculation based on adjusted availability start time in low latency mode\n        *  @memberof Constants#\n        *  @static\n        */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_AAST = 'abrFetchThroughputCalculationAAST';\n\n        /**\n         *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.LIVE_CATCHUP_MODE_DEFAULT = 'liveCatchupModeDefault';\n\n        /**\n         *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.LIVE_CATCHUP_MODE_LOLP = 'liveCatchupModeLoLP';\n\n        /**\n         *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow';\n\n        /**\n         *  @constant {string} EWMA Exponential moving average\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MOVING_AVERAGE_EWMA = 'ewma';\n\n        /**\n         *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\n         *  @memberof Constants#\n         *  @static\n         */\n        this.BAD_ARGUMENT_ERROR = 'Invalid Arguments';\n\n        /**\n         *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MISSING_CONFIG_ERROR = 'Missing config parameter(s)';\n\n        /**\n         *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\n\n        /**\n         *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_FIRST_TRACK = 'firstTrack';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY = 'highestEfficiency';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with the highest selectionPriority as defined in the manifest\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY = 'highestSelectionPriority';\n\n        /**\n         *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.CMCD_MODE_QUERY = 'query';\n\n        /**\n         *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.CMCD_MODE_HEADER = 'header';\n        this.INITIALIZE = 'initialize';\n        this.TEXT_SHOWING = 'showing';\n        this.TEXT_HIDDEN = 'hidden';\n        this.TEXT_DISABLED = 'disabled';\n        this.CC1 = 'CC1';\n        this.CC3 = 'CC3';\n        this.UTF8 = 'utf-8';\n        this.SCHEME_ID_URI = 'schemeIdUri';\n        this.START_TIME = 'starttime';\n        this.SERVICE_DESCRIPTION_DVB_LL_SCHEME = 'urn:dvb:dash:lowlatency:scope:2019';\n        this.SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME = 'urn:dvb:dash:lowlatency:critical:2019';\n        this.FONT_DOWNLOAD_DVB_SCHEME = 'urn:dvb:dash:fontdownload:2014';\n        this.XML = 'XML';\n        this.ARRAY_BUFFER = 'ArrayBuffer';\n        this.DVB_REPORTING_URL = 'dvb:reportingUrl';\n        this.DVB_PROBABILITY = 'dvb:probability';\n        this.OFF_MIMETYPE = 'application/font-sfnt';\n        this.WOFF_MIMETYPE = 'application/font-woff';\n        this.VIDEO_ELEMENT_READY_STATES = {\n            HAVE_NOTHING: 0,\n            HAVE_METADATA: 1,\n            HAVE_CURRENT_DATA: 2,\n            HAVE_FUTURE_DATA: 3,\n            HAVE_ENOUGH_DATA: 4\n        };\n        this.FILE_LOADER_TYPES = {\n            FETCH: 'fetch_loader',\n            XHR: 'xhr_loader'\n        }\n    }\n\n    constructor() {\n        this.init();\n    }\n}\n\nconst constants = new Constants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n        /**\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\n         * @public\n         */\n        this.cmsd = null;\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in seconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n        /**\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\n         */\n        this._fileLoaderType = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\nHTTPRequest.LICENSE = 'license';\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport {HTTPRequest, HTTPRequestTrace};\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.38\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.38',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // Heytap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 ' + BROWSER]], [\n            /(oculus|sailfish|huawei|vivo)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 ' + BROWSER], VERSION], [                    // Oculus/Sailfish/HuaweiBrowser/VivoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i                        // QQBrowser/2345 Browser\n            ], [NAME, VERSION], [\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i,                                             // Links\n            /panasonic;(viera)/i                                                // Panasonic Viera\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n            /\\b(opd2\\d{3}a?) bui/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,                             // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( \\d| pro)?)/i                                               // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst LICENSE_SERVER_MANIFEST_CONFIGURATIONS = {\n    attributes: ['Laurl', 'laurl'],\n    prefixes: ['clearkey', 'dashif']\n};\n\n/**\n * @class\n * @ignore\n */\nclass CommonEncryption {\n    /**\n     * Find and return the ContentProtection element in the given array\n     * that indicates support for MPEG Common Encryption\n     *\n     * @param {Array} cpArray array of content protection elements\n     * @returns {Object|null} the Common Encryption content protection element or\n     * null if one was not found\n     */\n    static findCencContentProtection(cpArray) {\n        let retVal = null;\n        for (let i = 0; i < cpArray.length; ++i) {\n            let cp = cpArray[i];\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\n                (cp.value.toLowerCase() === 'cenc' || cp.value.toLowerCase() === 'cbcs'))\n                retVal = cp;\n        }\n        return retVal;\n    }\n\n    /**\n     * Returns just the data portion of a single PSSH\n     *\n     * @param {ArrayBuffer} pssh - the PSSH\n     * @return {ArrayBuffer} data portion of the PSSH\n     */\n    static getPSSHData(pssh) {\n        let offset = 8; // Box size and type fields\n        let view = new DataView(pssh);\n\n        // Read version\n        let version = view.getUint8(offset);\n\n        offset += 20; // Version (1), flags (3), system ID (16)\n\n        if (version > 0) {\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\n        }\n\n        offset += 4; // Data size\n        return pssh.slice(offset);\n    }\n\n    /**\n     * Returns the PSSH associated with the given key system from the concatenated\n     * list of PSSH boxes in the given initData\n     *\n     * @param {KeySystem} keySystem the desired\n     * key system\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\n     * or null if a valid association could not be found.\n     */\n    static getPSSHForKeySystem(keySystem, initData) {\n        let psshList = CommonEncryption.parsePSSHList(initData);\n        if (keySystem && psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\n            return psshList[keySystem.uuid.toLowerCase()];\n        }\n        return null;\n    }\n\n    /**\n     * Parse a standard common encryption PSSH which contains a simple\n     * base64-encoding of the init data\n     *\n     * @param {Object} cpData the ContentProtection element\n     * @param {BASE64} BASE64 reference\n     * @returns {ArrayBuffer|null} the init data or null if not found\n     */\n    static parseInitDataFromContentProtection(cpData, BASE64) {\n        if ('pssh' in cpData) {\n\n            // Remove whitespaces and newlines from pssh text\n            cpData.pssh.__text = cpData.pssh.__text.replace(/\\r?\\n|\\r/g, '').replace(/\\s+/g, '');\n\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\n        }\n        return null;\n    }\n\n    /**\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\n     *\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\n     * CDM as initialization data when CommonEncryption content is detected\n     * @returns {Object|Array} an object that has a property named according to each of\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\n     * and a ArrayBuffer (the entire PSSH box) as the property value\n     */\n    static parsePSSHList(data) {\n\n        if (data === null || data === undefined)\n            return [];\n\n        let dv = new DataView(data.buffer || data); // data.buffer first for Uint8Array support\n        let done = false;\n        let pssh = {};\n\n        // TODO: Need to check every data read for end of buffer\n        let byteCursor = 0;\n        while (!done) {\n\n            let size,\n                nextBox,\n                version,\n                systemID;\n            let boxStart = byteCursor;\n\n            if (byteCursor >= dv.buffer.byteLength)\n                break;\n\n            /* Box size */\n            size = dv.getUint32(byteCursor);\n            nextBox = byteCursor + size;\n            byteCursor += 4;\n\n            /* Verify PSSH */\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor += 4;\n\n            /* Version must be 0 or 1 */\n            version = dv.getUint8(byteCursor);\n            if (version !== 0 && version !== 1) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor++;\n\n            byteCursor += 3; /* skip flags */\n\n            // 16-byte UUID/SystemID\n            systemID = '';\n            let i, val;\n            for (i = 0; i < 4; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 4;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 6; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 6;\n\n            systemID = systemID.toLowerCase();\n\n            /* PSSH Data Size */\n            byteCursor += 4;\n\n            /* PSSH Data */\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\n            byteCursor = nextBox;\n        }\n\n        return pssh;\n    }\n\n    static getLicenseServerUrlFromMediaInfo(mediaInfo, schemeIdUri) {\n        try {\n\n            if (!mediaInfo || mediaInfo.length === 0) {\n                return null;\n            }\n\n            let i = 0;\n            let licenseServer = null;\n\n            while (i < mediaInfo.length && !licenseServer) {\n                const info = mediaInfo[i];\n\n                if (info && info.contentProtection && info.contentProtection.length > 0) {\n                    const targetProtectionData = info.contentProtection.filter((cp) => {\n                        return cp.schemeIdUri && cp.schemeIdUri === schemeIdUri;\n                    });\n\n                    if (targetProtectionData && targetProtectionData.length > 0) {\n                        let j = 0;\n                        while (j < targetProtectionData.length && !licenseServer) {\n                            const ckData = targetProtectionData[j];\n                            let k = 0;\n                            while (k < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length && !licenseServer) {\n                                let l = 0;\n                                const attribute = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];\n                                while (l < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length && !licenseServer) {\n                                    const prefix = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];\n                                    if (ckData[attribute] && ckData[attribute].__prefix && ckData[attribute].__prefix === prefix && ckData[attribute].__text) {\n                                        licenseServer = ckData[attribute].__text;\n                                    }\n                                    l += 1;\n                                }\n                                k += 1;\n                            }\n                            j += 1;\n                        }\n                    }\n                }\n                i += 1;\n            }\n            return licenseServer;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n\nexport default CommonEncryption;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc A media capability\n * @ignore\n */\nclass MediaCapability {\n    /**\n     * @param {string} contentType MIME type and codecs (RFC6386)\n     * @param {string} robustness\n     * @class\n     * @ignore\n     */\n    constructor(contentType, robustness) {\n        this.contentType = contentType;\n        this.robustness = robustness;\n    }\n}\n\nexport default MediaCapability;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc Represents a set of configurations that describe the capabilities desired for\n *  support by a given CDM\n * @ignore\n */\nclass KeySystemConfiguration {\n    /**\n     * @param {Array.<MediaCapability>} audioCapabilities array of\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {Array.<MediaCapability>} videoCapabilities array of\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\n     * One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {string} persistentState desired support for persistent storage of\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {Array.<string>} sessionTypes List of session types that must\n     * be supported by the key system\n     * @class\n     */\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n        this.initDataTypes = [ 'cenc' ];\n        if (audioCapabilities && audioCapabilities.length) {\n            this.audioCapabilities = audioCapabilities;\n        }\n        if (videoCapabilities && videoCapabilities.length) {\n            this.videoCapabilities = videoCapabilities;\n        }\n        this.distinctiveIdentifier = distinctiveIdentifier;\n        this.persistentState = persistentState;\n        this.sessionTypes = sessionTypes;\n    }\n}\n\nexport default KeySystemConfiguration;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../../core/errors/ErrorsBase';\n\n/**\n * @class\n */\nclass ProtectionErrors extends ErrorsBase {\n    constructor() {\n        super();\n\n        /**\n         *  Generid key Error code\n         */\n        this.MEDIA_KEYERR_CODE = 100;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\n\n        /**\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\n         */\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\n        /**\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\n         */\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\n        /**\n         *  Error code returned when License server certificate has not been successfully updated\n         */\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\n        /**\n         *  Error code returned when license validity has expired\n         */\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\n        /**\n         *  Error code returned when no licenser url is defined\n         */\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\n        /**\n         *  Error code returned when key system access is denied\n         */\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\n        /**\n         *  Error code returned when key session has not been successfully created\n         */\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\n        /**\n         *  Error code returned when license request failed after a keymessage event has been triggered\n         */\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\n\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\n    }\n}\n\nlet protectionErrors = new ProtectionErrors();\nexport default protectionErrors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Defines a license request\n * @ignore\n */\nclass LicenseRequest {\n    /**\n     * Defines a license request\n     *\n     * @class\n     */\n    constructor(url, method, responseType, headers, withCredentials, messageType, sessionId, data) {\n\n        /**\n         * The license request url\n         */\n        this.url = url;\n\n        /**\n         * The HTTP method\n         */\n        this.method = method;\n\n        /**\n         * The HTTP response type\n         */\n        this.responseType = responseType;\n\n        /**\n         * The HTP request headers\n         */\n        this.headers = headers;\n\n        /**\n         * Wether request is done using credentials (cross-site cookies)\n         */\n        this.withCredentials = withCredentials;\n\n        /**\n         * The license request message type (see https://www.w3.org/TR/encrypted-media/#dom-mediakeymessagetype)\n         */\n        this.messageType = messageType;\n\n        /**\n         * The corresponding EME session ID\n         */\n        this.sessionId = sessionId;\n\n        /**\n         * The license request data\n         */\n        this.data = data;\n    }\n}\n\nexport default LicenseRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Defines a license response\n */\nclass LicenseResponse {\n    /**\n     * Defines a license response\n     *\n     * @class\n     * @ignore\n     */\n    constructor(url, headers, data) {\n\n        /**\n         * The url that was loaded, that can be redirected from original request url\n         */\n        this.url = url;\n\n        /**\n         * The HTP response headers\n         */\n        this.headers = headers;\n\n        /**\n         * The license response data\n         */\n        this.data = data;\n    }\n}\n\nexport default LicenseResponse;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport MediaCapability from '../vo/MediaCapability';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport DashJSError from '../../vo/DashJSError';\nimport LicenseRequest from '../vo/LicenseRequest';\nimport LicenseResponse from '../vo/LicenseResponse';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\nimport Utils from '../../../core/Utils';\nimport Constants from '../../constants/Constants';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst NEEDKEY_BEFORE_INITIALIZE_RETRIES = 5;\nconst NEEDKEY_BEFORE_INITIALIZE_TIMEOUT = 500;\n\nconst LICENSE_SERVER_REQUEST_RETRIES = 3;\nconst LICENSE_SERVER_REQUEST_RETRY_INTERVAL = 1000;\nconst LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT = 8000;\n\n/**\n * @module ProtectionController\n * @description Provides access to media protection information and functionality.  Each\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\n * which encapsulates a set of protection information (EME APIs, selected key system,\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\n * functionality provided in {@link ProtectionKeyController}.\n * @todo ProtectionController does almost all of its tasks automatically after init() is\n * called.  Applications might want more control over this process and want to go through\n * each step manually (key system selection, session creation, session maintenance).\n * This module can be accessed using the MediaPlayer API getProtectionController()\n * @param {Object} config\n */\n\nfunction ProtectionController(config) {\n\n    config = config || {};\n    const protectionKeyController = config.protectionKeyController;\n    let protectionModel = config.protectionModel;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const debug = config.debug;\n    const BASE64 = config.BASE64;\n    const constants = config.constants;\n    let needkeyRetries = [];\n    const cmcdModel = config.cmcdModel;\n    const settings = config.settings;\n    const customParametersModel = config.customParametersModel;\n\n    let instance,\n        logger,\n        pendingKeySessionsToHandle,\n        mediaInfoArr,\n        protDataSet,\n        sessionType,\n        robustnessLevel,\n        selectedKeySystem,\n        keySystemSelectionInProgress,\n        licenseXhrRequest,\n        licenseRequestRetryTimeout;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        pendingKeySessionsToHandle = [];\n        mediaInfoArr = [];\n        sessionType = 'temporary';\n        robustnessLevel = '';\n        licenseXhrRequest = null;\n        licenseRequestRetryTimeout = null;\n        eventBus.on(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\n        eventBus.on(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\n    }\n\n    function checkConfig() {\n        if (!eventBus || !eventBus.hasOwnProperty('on') || !protectionKeyController || !protectionKeyController.hasOwnProperty('getSupportedKeySystemsFromContentProtection')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    /**\n     * Initialize this protection system for a given media type.\n     *\n     * @param {StreamInfo} [mediaInfo] Media information\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function initializeForMedia(mediaInfo) {\n        // Not checking here if a session for similar KS/KID combination is already created\n        // because still don't know which keysystem will be selected.\n        // Once Keysystem is selected and before creating the session, we will do that check\n        // so we create the strictly necessary DRM sessions\n        if (!mediaInfo) {\n            throw new Error('mediaInfo can not be null or undefined');\n        }\n\n        checkConfig();\n\n        mediaInfoArr.push(mediaInfo);\n    }\n\n    /**\n     * Once all mediaInfo objects have been added to our mediaInfoArray we can select a key system or check if the kid has changed and we need to trigger a new license request\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function handleKeySystemFromManifest() {\n        if (!mediaInfoArr || mediaInfoArr.length === 0) {\n            return;\n        }\n\n        let supportedKeySystems = [];\n        mediaInfoArr.forEach((mInfo) => {\n            const currentKs = protectionKeyController.getSupportedKeySystemsFromContentProtection(mInfo.contentProtection, protDataSet, sessionType);\n            // We assume that the same key systems are signaled for each AS. We can use the first entry we found\n            if (currentKs.length > 0) {\n                if (supportedKeySystems.length === 0) {\n                    supportedKeySystems = currentKs;\n                }\n                // Save config for creating key session once we selected a key system\n                pendingKeySessionsToHandle.push(currentKs);\n            }\n        })\n\n        if (supportedKeySystems && supportedKeySystems.length > 0) {\n            _selectKeySystemOrUpdateKeySessions(supportedKeySystems, true);\n        }\n    }\n\n    /**\n     * Selects a key system if we dont have any one yet. Otherwise we use the existing key system and trigger a new license request if the initdata has changed\n     * @param {array} supportedKs\n     * @private\n     */\n    function _handleKeySystemFromPssh(supportedKs) {\n        pendingKeySessionsToHandle.push(supportedKs);\n        _selectKeySystemOrUpdateKeySessions(supportedKs, false);\n    }\n\n    /**\n     * Select the key system or update one of our existing key sessions\n     * @param {array} supportedKs\n     * @param {boolean} fromManifest\n     * @private\n     */\n    function _selectKeySystemOrUpdateKeySessions(supportedKs, fromManifest) {\n        // First time, so we need to select a key system\n        if (!selectedKeySystem && !keySystemSelectionInProgress) {\n            _selectInitialKeySystem(supportedKs, fromManifest);\n        }\n\n        // We already selected a key system. We only need to trigger a new license exchange if the init data has changed\n        else if (selectedKeySystem) {\n            _handleKeySessions();\n        }\n    }\n\n    /**\n     * We do not have a key system yet. Select one\n     * @param {array} supportedKs\n     * @param {boolean} fromManifest\n     * @private\n     */\n    function _selectInitialKeySystem(supportedKs, fromManifest) {\n        if (!keySystemSelectionInProgress) {\n            keySystemSelectionInProgress = true;\n            const requestedKeySystems = [];\n\n            // Reorder key systems according to priority order provided in protectionData\n            supportedKs = supportedKs.sort((ksA, ksB) => {\n                let indexA = (protDataSet && protDataSet[ksA.ks.systemString] && protDataSet[ksA.ks.systemString].priority >= 0) ? protDataSet[ksA.ks.systemString].priority : supportedKs.length;\n                let indexB = (protDataSet && protDataSet[ksB.ks.systemString] && protDataSet[ksB.ks.systemString].priority >= 0) ? protDataSet[ksB.ks.systemString].priority : supportedKs.length;\n                return indexA - indexB;\n            });\n\n            // Add all key systems to our request list since we have yet to select a key system\n            for (let i = 0; i < supportedKs.length; i++) {\n                const keySystemConfiguration = _getKeySystemConfiguration(supportedKs[i]);\n                requestedKeySystems.push({\n                    ks: supportedKs[i].ks,\n                    configs: [keySystemConfiguration],\n                    protData: supportedKs[i].protData\n                });\n            }\n\n            let keySystemAccess;\n\n            protectionModel.requestKeySystemAccess(requestedKeySystems)\n                .then((event) => {\n                    keySystemAccess = event.data;\n                    let selectedSystemString = keySystemAccess.mksa && keySystemAccess.mksa.selectedSystemString ? keySystemAccess.mksa.selectedSystemString : keySystemAccess.keySystem.systemString;\n                    logger.info('DRM: KeySystem Access Granted for system string (' + selectedSystemString + ')!  Selecting key system...');\n                    return protectionModel.selectKeySystem(keySystemAccess);\n                })\n                .then((keySystem) => {\n                    selectedKeySystem = keySystem;\n                    keySystemSelectionInProgress = false;\n\n                    if (!protectionModel) {\n                        return;\n                    }\n\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: keySystemAccess });\n\n                    // Set server certificate from protData\n                    const protData = _getProtDataForKeySystem(selectedKeySystem);\n                    if (protData && protData.serverCertificate && protData.serverCertificate.length > 0) {\n                        protectionModel.setServerCertificate(BASE64.decodeArray(protData.serverCertificate).buffer);\n                    }\n\n                    _handleKeySessions();\n                })\n                .catch((event) => {\n                    selectedKeySystem = null;\n                    keySystemSelectionInProgress = false;\n                    if (!fromManifest) {\n                        eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\n                            data: null,\n                            error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + 'Error selecting key system! -- ' + event.error)\n                        });\n                    }\n                })\n        }\n    }\n\n    /**\n     * If we have already selected a key system we only need to create a new key session and issue a new license request if the init data has changed.\n     * @private\n     */\n    function _handleKeySessions() {\n        // Create key sessions for the different AdaptationSets\n        let ksIdx;\n        for (let i = 0; i < pendingKeySessionsToHandle.length; i++) {\n            for (ksIdx = 0; ksIdx < pendingKeySessionsToHandle[i].length; ksIdx++) {\n                if (selectedKeySystem === pendingKeySessionsToHandle[i][ksIdx].ks) {\n                    const current = pendingKeySessionsToHandle[i][ksIdx]\n                    _loadOrCreateKeySession(current)\n                    break;\n                }\n            }\n        }\n        pendingKeySessionsToHandle = [];\n    }\n\n    /**\n     * Loads an existing key session if we already have a session id. Otherwise we create a new key session\n     * @param {object} keySystemInfo\n     * @private\n     */\n    function _loadOrCreateKeySession(keySystemInfo) {\n        // Clearkey\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\n            // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\n            // initData and overwrite possible initData indicated in encrypted event (EME)\n            if (keySystemInfo.protData && keySystemInfo.protData.hasOwnProperty('clearkeys') && Object.keys(keySystemInfo.protData.clearkeys).length !== 0) {\n                const initData = { kids: Object.keys(keySystemInfo.protData.clearkeys) };\n                keySystemInfo.initData = new TextEncoder().encode(JSON.stringify(initData));\n            }\n        }\n\n        // Reuse existing KeySession\n        if (keySystemInfo.sessionId) {\n            // Load MediaKeySession with sessionId\n            loadKeySession(keySystemInfo);\n        }\n\n        // Create a new KeySession\n        else if (keySystemInfo.initData !== null) {\n            // Create new MediaKeySession with initData\n            createKeySession(keySystemInfo);\n        }\n    }\n\n    /**\n     * Loads a key session with the given session ID from persistent storage.  This essentially creates a new key session\n     *\n     * @param {object} ksInfo\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @ignore\n     */\n    function loadKeySession(keySystemInfo) {\n        checkConfig();\n        protectionModel.loadKeySession(keySystemInfo);\n    }\n\n    /**\n     * Create a new key session associated with the given initialization data from the MPD or from the PSSH box in the media\n     * For the latest version of the EME a request is generated. Once this request is ready we get notified via the INTERNAL_KEY_MESSAGE event\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {Uint8Array} cdmData the custom data to provide to licenser\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @ignore\n     */\n    function createKeySession(keySystemInfo) {\n        const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, keySystemInfo ? keySystemInfo.initData : null);\n\n        if (initDataForKS) {\n\n            // Check for duplicate key id\n            if (_isKeyIdDuplicate(keySystemInfo.keyId)) {\n                return;\n            }\n\n            // Check for duplicate initData\n            if (_isInitDataDuplicate(initDataForKS)) {\n                return;\n            }\n\n            try {\n                keySystemInfo.initData = initDataForKS;\n                protectionModel.createKeySession(keySystemInfo);\n            } catch (error) {\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\n                    data: null,\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + error.message)\n                });\n            }\n        } else if (keySystemInfo && keySystemInfo.initData) {\n            protectionModel.createKeySession(keySystemInfo);\n        } else {\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Selected key system is ' + (selectedKeySystem ? selectedKeySystem.systemString : null) + '.  needkey/encrypted event contains no initData corresponding to that key system!')\n            });\n        }\n    }\n\n    /**\n     * Returns the protectionData for a specific keysystem as specified by the application.\n     * @param {object} keySystem\n     * @return {object | null}\n     * @private\n     */\n    function _getProtDataForKeySystem(keySystem) {\n        if (keySystem) {\n            const keySystemString = keySystem.systemString;\n\n            if (protDataSet) {\n                return (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Removes all entries from the mediaInfoArr\n     */\n    function clearMediaInfoArray() {\n        mediaInfoArr = [];\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     * @ignore\n     */\n    function getSupportedKeySystemsFromContentProtection(cps) {\n        checkConfig();\n        return protectionKeyController.getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType);\n    }\n\n    /**\n     * Checks if a session has already created for the provided key id\n     * @param {string} keyId\n     * @return {boolean}\n     * @private\n     */\n    function _isKeyIdDuplicate(keyId) {\n\n        if (!keyId) {\n            return false;\n        }\n\n        try {\n            const sessions = protectionModel.getSessions();\n            for (let i = 0; i < sessions.length; i++) {\n                if (sessions[i].getKeyId() === keyId) {\n                    return true;\n                }\n            }\n            return false;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Checks if the provided init data is equal to one of the existing init data values\n     * @param {any} initDataForKS\n     * @return {boolean}\n     * @private\n     */\n    function _isInitDataDuplicate(initDataForKS) {\n\n        if (!initDataForKS) {\n            return false;\n        }\n\n        try {\n            const currentInitData = protectionModel.getAllInitData();\n            for (let i = 0; i < currentInitData.length; i++) {\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\n                    logger.debug('DRM: Ignoring initData because we have already seen it!');\n                    return true;\n                }\n            }\n\n            return false;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Removes the given key session from persistent storage and closes the session\n     * as if {@link ProtectionController#closeKeySession}\n     * was called\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionRemoved\n     * @fires ProtectionController#KeySessionClosed\n     * @ignore\n     */\n    function removeKeySession(sessionToken) {\n        checkConfig();\n        protectionModel.removeKeySession(sessionToken);\n    }\n\n    /**\n     * Closes the key session and releases all associated decryption keys.  These\n     * keys will no longer be available for decrypting media\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionClosed\n     * @ignore\n     */\n    function closeKeySession(sessionToken) {\n        checkConfig();\n        protectionModel.closeKeySession(sessionToken);\n    }\n\n    /**\n     * Sets a server certificate for use by the CDM when signing key messages\n     * intended for a particular license server.  This will fire\n     * an error event if a key system has not yet been selected.\n     *\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\n     * certificate\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#ServerCertificateUpdated\n     */\n    function setServerCertificate(serverCertificate) {\n        checkConfig();\n        protectionModel.setServerCertificate(serverCertificate);\n    }\n\n    /**\n     * Associate this protection system with the given HTMLMediaElement.  This\n     * causes the system to register for needkey/encrypted events from the given\n     * element and provides a destination for setting of MediaKeys\n     *\n     * @param {HTMLMediaElement} element the media element to which the protection\n     * system should be associated\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setMediaElement(element) {\n        checkConfig();\n        if (element) {\n            protectionModel.setMediaElement(element);\n            eventBus.on(events.NEED_KEY, _onNeedKey, instance);\n        } else if (element === null) {\n            protectionModel.setMediaElement(element);\n            eventBus.off(events.NEED_KEY, _onNeedKey, instance);\n        }\n    }\n\n    /**\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\n     * \"persistent-license\".  Default is \"temporary\".\n     *\n     * @param {string} value the session type\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setSessionType(value) {\n        sessionType = value;\n    }\n\n    /**\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\n     *\n     * @param {string} level the robustness level\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setRobustnessLevel(level) {\n        robustnessLevel = level;\n    }\n\n    /**\n     * Attach KeySystem-specific data to use for license acquisition with EME\n     *\n     * @param {Object} data an object containing property names corresponding to\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\n     * being instances of {@link ProtectionData}\n     * @memberof module:ProtectionController\n     * @instance\n     * @ignore\n     */\n    function setProtectionData(data) {\n        protDataSet = data;\n        protectionKeyController.setProtectionData(data);\n    }\n\n    /**\n     * Stop method is called when current playback is stopped/resetted.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function stop() {\n        _abortLicenseRequest();\n        if (protectionModel) {\n            protectionModel.stop();\n        }\n    }\n\n    /**\n     * Destroys all protection data associated with this protection set.  This includes\n     * deleting all key sessions. In the case of persistent key sessions, the sessions\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\n     * associated with a HTMLMediaElement, it will be detached from that element.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     * @ignore\n     */\n    function reset() {\n        eventBus.off(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\n        eventBus.off(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\n\n        checkConfig();\n\n        _abortLicenseRequest();\n\n        setMediaElement(null);\n\n        selectedKeySystem = null;\n        keySystemSelectionInProgress = false;\n\n        if (protectionModel) {\n            protectionModel.reset();\n            protectionModel = null;\n        }\n\n        needkeyRetries.forEach(retryTimeout => clearTimeout(retryTimeout));\n        needkeyRetries = [];\n\n        mediaInfoArr = [];\n        pendingKeySessionsToHandle = [];\n    }\n\n    /**\n     * Returns an object corresponding to the EME MediaKeySystemConfiguration dictionary\n     * @param {object} keySystem\n     * @return {KeySystemConfiguration}\n     * @private\n     */\n    function _getKeySystemConfiguration(keySystemData) {\n        const protData = keySystemData.protData;\n        const audioCapabilities = [];\n        const videoCapabilities = [];\n        const audioRobustness = (protData && protData.audioRobustness && protData.audioRobustness.length > 0) ? protData.audioRobustness : robustnessLevel;\n        const videoRobustness = (protData && protData.videoRobustness && protData.videoRobustness.length > 0) ? protData.videoRobustness : robustnessLevel;\n        const ksSessionType = keySystemData.sessionType;\n        const distinctiveIdentifier = (protData && protData.distinctiveIdentifier) ? protData.distinctiveIdentifier : 'optional';\n        const persistentState = (protData && protData.persistentState) ? protData.persistentState : (ksSessionType === 'temporary') ? 'optional' : 'required';\n\n        mediaInfoArr.forEach((media) => {\n            if (media.type === constants.AUDIO) {\n                audioCapabilities.push(new MediaCapability(media.codec, audioRobustness));\n            } else if (media.type === constants.VIDEO) {\n                videoCapabilities.push(new MediaCapability(media.codec, videoRobustness));\n            }\n        });\n\n        return new KeySystemConfiguration(\n            audioCapabilities, videoCapabilities, distinctiveIdentifier,\n            persistentState,\n            [ksSessionType]);\n    }\n\n    /**\n     * Event handler for when the status of the key has changed\n     * @param {object} e\n     * @private\n     */\n    function _onKeyStatusChanged(e) {\n        if (e.error) {\n            eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: null, error: e.error });\n        } else {\n            logger.debug('DRM: key status = ' + e.status);\n        }\n    }\n\n    /**\n     * Event handler for the key message event. Once we have a key message we can issue a license request\n     * @param {object} e\n     * @private\n     */\n    function _onKeyMessage(e) {\n        logger.debug('DRM: onKeyMessage');\n\n        // Dispatch event to applications indicating we received a key message\n        const keyMessage = e.data;\n        eventBus.trigger(events.KEY_MESSAGE, { data: keyMessage });\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        const message = keyMessage.message;\n        const sessionToken = keyMessage.sessionToken;\n        const protData = _getProtDataForKeySystem(selectedKeySystem);\n        const licenseServerModelInstance = protectionKeyController.getLicenseServerModelInstance(selectedKeySystem, protData, messageType);\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\n\n        // Ensure message from CDM is not empty\n        if (!message || message.byteLength === 0) {\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));\n            return;\n        }\n\n        // Message not destined for license server\n        if (!licenseServerModelInstance) {\n            logger.debug('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionId());\n            _sendLicenseRequestCompleteEvent(eventData);\n            return;\n        }\n\n        // Perform any special handling for ClearKey\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\n            const clearkeys = protectionKeyController.processClearKeyLicenseRequest(selectedKeySystem, protData, message);\n            if (clearkeys && clearkeys.keyPairs && clearkeys.keyPairs.length > 0) {\n                logger.debug('DRM: ClearKey license request handled by application!');\n                _sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken, clearkeys);\n                return;\n            }\n        }\n\n        // In all other cases we have to make a license request\n        _issueLicenseRequest(keyMessage, licenseServerModelInstance, protData);\n    }\n\n    /**\n     * Notify other classes that the license request was completed\n     * @param {object} data\n     * @param {object} error\n     * @private\n     */\n    function _sendLicenseRequestCompleteEvent(data, error) {\n        eventBus.trigger(events.LICENSE_REQUEST_COMPLETE, { data: data, error: error });\n    }\n\n    /**\n     * Start issuing a license request\n     * @param {object} keyMessage\n     * @param {object} licenseServerData\n     * @param {object} protData\n     * @private\n     */\n    function _issueLicenseRequest(keyMessage, licenseServerData, protData) {\n        const sessionToken = keyMessage.sessionToken;\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\n        const keySystemString = selectedKeySystem ? selectedKeySystem.systemString : null;\n\n        // Determine license server URL\n        let url = _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData);\n\n        // Ensure valid license server URL\n        if (!url) {\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));\n            return;\n        }\n\n        // Set optional XMLHttpRequest headers from protection data and message\n        const reqHeaders = {};\n        let withCredentials = false;\n        if (protData) {\n            _updateHeaders(reqHeaders, protData.httpRequestHeaders);\n        }\n        const message = keyMessage.message;\n        const headersFromMessage = selectedKeySystem.getRequestHeadersFromMessage(message);\n        _updateHeaders(reqHeaders, headersFromMessage);\n\n        Object.keys(reqHeaders).forEach((key) => {\n            if ('authorization' === key.toLowerCase()) {\n                withCredentials = true;\n            }\n        });\n\n        // Overwrite withCredentials property from protData if present\n        if (protData && typeof protData.withCredentials == 'boolean') {\n            withCredentials = protData.withCredentials;\n        }\n\n        const onLoad = function (xhr) {\n            if (!protectionModel) {\n                return;\n            }\n\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                const responseHeaders = Utils.parseHttpHeaders(xhr.getAllResponseHeaders ? xhr.getAllResponseHeaders() : null);\n                let licenseResponse = new LicenseResponse(xhr.responseURL, responseHeaders, xhr.response);\n                const licenseResponseFilters = customParametersModel.getLicenseResponseFilters();\n                _applyFilters(licenseResponseFilters, licenseResponse)\n                    .then(() => {\n                        const licenseMessage = licenseServerData.getLicenseMessage(licenseResponse.data, keySystemString, messageType);\n                        if (licenseMessage !== null) {\n                            _sendLicenseRequestCompleteEvent(eventData);\n                            protectionModel.updateKeySession(sessionToken, licenseMessage);\n                        } else {\n                            _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\n                        }\n                    });\n            } else {\n                _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\n            }\n        };\n\n        const onAbort = function (xhr) {\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR aborted. status is \"' +\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\n        };\n\n        const onError = function (xhr) {\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR error. status is \"' +\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\n        };\n\n        const reqPayload = selectedKeySystem.getLicenseRequestFromMessage(message);\n        const reqMethod = licenseServerData.getHTTPMethod(messageType);\n        const responseType = licenseServerData.getResponseType(keySystemString, messageType);\n        const timeout = protData && !isNaN(protData.httpTimeout) ? protData.httpTimeout : LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT;\n        const sessionId = sessionToken.getSessionId() || null;\n\n        let licenseRequest = new LicenseRequest(url, reqMethod, responseType, reqHeaders, withCredentials, messageType, sessionId, reqPayload);\n        const retryAttempts = !isNaN(settings.get().streaming.retryAttempts[HTTPRequest.LICENSE]) ? settings.get().streaming.retryAttempts[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRIES;\n        const licenseRequestFilters = customParametersModel.getLicenseRequestFilters();\n        _applyFilters(licenseRequestFilters, licenseRequest)\n            .then(() => {\n                _doLicenseRequest(licenseRequest, retryAttempts, timeout, onLoad, onAbort, onError);\n            });\n    }\n\n    /**\n     * Implement license requests with a retry mechanism to avoid temporary network issues to affect playback experience\n     * @param {object} request\n     * @param {number} retriesCount\n     * @param {number} timeout\n     * @param {function} onLoad\n     * @param {function} onAbort\n     * @param {function} onError\n     * @private\n     */\n    function _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError) {\n        const xhr = new XMLHttpRequest();\n\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n            const cmcdMode = settings.get().streaming.cmcd.mode;\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\n                const cmcdParams = cmcdModel.getQueryParameter({\n                    url: request.url,\n                    type: HTTPRequest.LICENSE\n                });\n\n                if (cmcdParams) {\n                    request.url = Utils.addAditionalQueryParameterToUrl(request.url, [cmcdParams]);\n                }\n            }\n        }\n\n        xhr.open(request.method, request.url, true);\n        xhr.responseType = request.responseType;\n        xhr.withCredentials = request.withCredentials;\n        if (timeout > 0) {\n            xhr.timeout = timeout;\n        }\n        for (const key in request.headers) {\n            xhr.setRequestHeader(key, request.headers[key]);\n        }\n\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n            const cmcdMode = settings.get().streaming.cmcd.mode;\n            if (cmcdMode === Constants.CMCD_MODE_HEADER) {\n                const cmcdHeaders = cmcdModel.getHeaderParameters({\n                    url: request.url,\n                    type: HTTPRequest.LICENSE\n                });\n\n                if (cmcdHeaders) {\n                    for (const header in cmcdHeaders) {\n                        let value = cmcdHeaders[header];\n                        if (value) {\n                            xhr.setRequestHeader(header, value);\n                        }\n                    }\n                }\n            }\n        }\n\n        const _retryRequest = function () {\n            // fail silently and retry\n            retriesCount--;\n            const retryInterval = !isNaN(settings.get().streaming.retryIntervals[HTTPRequest.LICENSE]) ? settings.get().streaming.retryIntervals[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRY_INTERVAL;\n            licenseRequestRetryTimeout = setTimeout(function () {\n                _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError);\n            }, retryInterval);\n        };\n\n        xhr.onload = function () {\n            licenseXhrRequest = null;\n            if (this.status >= 200 && this.status <= 299 || retriesCount <= 0) {\n                onLoad(this);\n            } else {\n                logger.warn('License request failed (' + this.status + '). Retrying it... Pending retries: ' + retriesCount);\n                _retryRequest();\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function () {\n            licenseXhrRequest = null;\n            if (retriesCount <= 0) {\n                onError(this);\n            } else {\n                logger.warn('License request network request failed . Retrying it... Pending retries: ' + retriesCount);\n                _retryRequest();\n            }\n        };\n\n        xhr.onabort = function () {\n            onAbort(this);\n        };\n\n        // deprecated, to be removed\n        eventBus.trigger(events.LICENSE_REQUEST_SENDING, {\n            url: request.url,\n            headers: request.headers,\n            payload: request.data,\n            sessionId: request.sessionId\n        });\n\n        licenseXhrRequest = xhr;\n        xhr.send(request.data);\n    }\n\n    /**\n     * Aborts license request\n     * @private\n     */\n    function _abortLicenseRequest() {\n        if (licenseXhrRequest) {\n            licenseXhrRequest.onloadend = licenseXhrRequest.onerror = licenseXhrRequest.onprogress = undefined; //Ignore events from aborted requests.\n            licenseXhrRequest.abort();\n            licenseXhrRequest = null;\n        }\n\n        if (licenseRequestRetryTimeout) {\n            clearTimeout(licenseRequestRetryTimeout);\n            licenseRequestRetryTimeout = null;\n        }\n    }\n\n    /**\n     * Returns the url of the license server\n     * @param {object} protData\n     * @param {string} messageType\n     * @param {object} sessionToken\n     * @param {object} keyMessage\n     * @param {object} licenseServerData\n     * @return {*}\n     * @private\n     */\n    function _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData) {\n        let url = null;\n        const message = keyMessage.message;\n\n        // Check if the url is defined by the application\n        if (protData && protData.serverURL) {\n            const serverURL = protData.serverURL;\n            if (typeof serverURL === 'string' && serverURL !== '') {\n                url = serverURL;\n            } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\n                url = serverURL[messageType];\n            }\n        }\n\n        // This is the old way of providing the url\n        else if (protData && protData.laURL && protData.laURL !== '') {\n            url = protData.laURL;\n        }\n\n        // No url provided by the app. Check the manifest and the pssh\n        else {\n            // Check for url defined in the manifest\n            url = CommonEncryption.getLicenseServerUrlFromMediaInfo(mediaInfoArr, selectedKeySystem.schemeIdURI);\n\n            // In case we are not using Clearky we can still get a url from the pssh.\n            if (!url && !protectionKeyController.isClearKey(selectedKeySystem)) {\n                const psshData = CommonEncryption.getPSSHData(sessionToken.initData);\n                url = selectedKeySystem.getLicenseServerURLFromInitData(psshData);\n\n                // Still no url, check the keymessage\n                if (!url) {\n                    url = keyMessage.laURL;\n                }\n            }\n        }\n        // Possibly update or override the URL based on the message\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\n\n        return url;\n    }\n\n    /**\n     * Add new headers to the existing ones\n     * @param {array} reqHeaders\n     * @param {object} headers\n     * @private\n     */\n    function _updateHeaders(reqHeaders, headers) {\n        if (headers) {\n            for (const key in headers) {\n                reqHeaders[key] = headers[key];\n            }\n        }\n    }\n\n    /**\n     * Reports an error that might have occured during the license request\n     * @param {object} xhr\n     * @param {object} eventData\n     * @param {string} keySystemString\n     * @param {string} messageType\n     * @param {object} licenseServerData\n     * @private\n     */\n    function _reportError(xhr, eventData, keySystemString, messageType, licenseServerData) {\n        let errorMsg = 'NONE';\n        let data = null;\n\n        if (xhr.response) {\n            errorMsg = licenseServerData.getErrorResponse(xhr.response, keySystemString, messageType);\n            data = {\n                serverResponse: xhr.response || null,\n                responseCode: xhr.status || null,\n                responseText: xhr.statusText || null\n            }\n        }\n\n        _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n            ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR complete. status is \"' +\n            xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState + '.  Response is ' + errorMsg,\n            data\n        ));\n    }\n\n    /**\n     * Applies custom filters defined by the application\n     * @param {array} filters\n     * @param {object} param\n     * @return {Promise<void>|*}\n     * @private\n     */\n    function _applyFilters(filters, param) {\n        if (!filters) return Promise.resolve();\n        return filters.reduce((prev, next) => {\n            return prev.then(() => {\n                return next(param);\n            });\n        }, Promise.resolve());\n    }\n\n    /**\n     * Event handler for \"needkey\" and \"encrypted\" events\n     * @param {object} event\n     * @param {number} retry\n     * @private\n     */\n    function _onNeedKey(event, retry) {\n        if (!settings.get().streaming.protection.ignoreEmeEncryptedEvent) {\n            logger.debug('DRM: onNeedKey');\n\n            // Ignore non-cenc initData\n            if (event.key.initDataType !== 'cenc') {\n                logger.warn('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\n                return;\n            }\n\n            if (mediaInfoArr.length === 0) {\n                logger.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized');\n                retry = typeof retry === 'undefined' ? 1 : retry + 1;\n                if (retry < NEEDKEY_BEFORE_INITIALIZE_RETRIES) {\n                    needkeyRetries.push(setTimeout(() => {\n                        _onNeedKey(event, retry);\n                    }, NEEDKEY_BEFORE_INITIALIZE_TIMEOUT));\n                    return;\n                }\n            }\n\n            // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\n            // Convert to ArrayBuffer\n            let abInitData = event.key.initData;\n            if (ArrayBuffer.isView(abInitData)) {\n                abInitData = abInitData.buffer;\n            }\n\n            // If key system has already been selected and initData already seen, then do nothing\n            if (selectedKeySystem) {\n                const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, abInitData);\n                if (initDataForKS) {\n                    // Check for duplicate initData\n                    if (_isInitDataDuplicate(initDataForKS)) {\n                        return;\n                    }\n                }\n            }\n\n            logger.debug('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\n\n            const supportedKs = protectionKeyController.getSupportedKeySystemsFromSegmentPssh(abInitData, protDataSet, sessionType);\n            if (supportedKs.length === 0) {\n                logger.debug('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\n                return;\n            }\n\n            _handleKeySystemFromPssh(supportedKs);\n        }\n    }\n\n    /**\n     * Returns all available key systems\n     * @return {array}\n     */\n    function getKeySystems() {\n        return protectionKeyController ? protectionKeyController.getKeySystems() : [];\n    }\n\n    /**\n     * Sets all available key systems\n     * @param {array} keySystems\n     */\n    function setKeySystems(keySystems) {\n        if (protectionKeyController) {\n            protectionKeyController.setKeySystems(keySystems);\n        }\n    }\n\n    instance = {\n        initializeForMedia,\n        clearMediaInfoArray,\n        handleKeySystemFromManifest,\n        createKeySession,\n        loadKeySession,\n        removeKeySession,\n        closeKeySession,\n        setServerCertificate,\n        setMediaElement,\n        setSessionType,\n        setRobustnessLevel,\n        setProtectionData,\n        getSupportedKeySystemsFromContentProtection,\n        getKeySystems,\n        setKeySystems,\n        stop,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nProtectionController.__dashjs_factory_name = 'ProtectionController';\nexport default FactoryMaker.getClassFactory(ProtectionController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\n * @ignore\n */\nclass KeyPair {\n    /**\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\n     * @class\n     * @ignore\n     */\n    constructor(keyID, key) {\n        this.keyID = keyID;\n        this.key = key;\n    }\n}\n\nexport default KeyPair;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\n *  type\n * @ignore\n */\nclass ClearKeyKeySet {\n    /**\n     * @param {Array.<KeyPair>} keyPairs\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\n     * or 'temporary'.  Can also be null or undefined.\n     * @class\n     * @ignore\n     */\n    constructor(keyPairs, type) {\n        if (type && type !== 'persistent' && type !== 'temporary')\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n        this.keyPairs = keyPairs;\n        this.type = type;\n    }\n\n    /**\n     * Convert this key set to its JSON Web Key (JWK) representation\n     *\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n     */\n    toJWK() {\n        let i;\n        let numKeys = this.keyPairs.length;\n        let jwk = {keys: []};\n\n        for (i = 0; i < numKeys; i++) {\n            let key = {\n                kty: 'oct',\n                alg: 'A128KW',\n                kid: this.keyPairs[i].keyID,\n                k: this.keyPairs[i].key\n            };\n            jwk.keys.push(key);\n        }\n        if (this.type) {\n            jwk.type = this.type;\n        }\n        let jwkString = JSON.stringify(jwk);\n        const len = jwkString.length;\n\n        // Convert JSON string to ArrayBuffer\n        let buf = new ArrayBuffer(len);\n        let bView = new Uint8Array(buf);\n        for (i = 0; i < len; i++)\n            bView[i] = jwkString.charCodeAt(i);\n        return buf;\n    }\n}\n\nexport default ClearKeyKeySet;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Protection Constants declaration\n * @class\n * @ignore\n */\nclass ProtectionConstants {\n\n    init () {\n        this.CLEARKEY_KEYSTEM_STRING = 'org.w3.clearkey';\n        this.WIDEVINE_KEYSTEM_STRING = 'com.widevine.alpha';\n        this.PLAYREADY_KEYSTEM_STRING = 'com.microsoft.playready';\n        this.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING = 'com.microsoft.playready.recommendation';\n        this.INITIALIZATION_DATA_TYPE_CENC = 'cenc';\n        this.INITIALIZATION_DATA_TYPE_KEYIDS = 'keyids'\n        this.INITIALIZATION_DATA_TYPE_WEBM = 'webm'\n    }\n\n    constructor () {\n        this.init();\n    }\n}\n\nlet constants = new ProtectionConstants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'e2719d58-a985-b3c9-781a-b030af78d30e';\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemClearKey(config) {\n\n    config = config || {};\n    let instance;\n    const BASE64 = config.BASE64;\n\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        let clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            const keyPairs = [];\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\n                const clearkeyID = jsonMsg.kids[i];\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp, cencContentProtection) {\n        try {\n            let initData = CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n\n            if (!initData && cencContentProtection) {\n                const cencDefaultKid = cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);\n                const data = { kids: [cencDefaultKid] };\n                initData = new TextEncoder().encode(JSON.stringify(data));\n            }\n\n            return initData;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function cencDefaultKidToBase64Representation(cencDefaultKid) {\n        try {\n            let kid = cencDefaultKid.replace(/-/g, '');\n            kid = btoa(kid.match(/\\w{2}/g).map((a) => {\n                return String.fromCharCode(parseInt(a, 16));\n            }).join(''));\n            return kid.replace(/=/g, '')\n                .replace(/\\//g, '_')\n                .replace(/\\+/g, '-');\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        // Set content type to application/json by default\n        return {\n            'Content-Type': 'application/json'\n        };\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return JSON.stringify(JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message))));\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    function getCDMData(/*cdmData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid,\n        schemeIdURI,\n        systemString,\n        getInitData,\n        getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData,\n        getCDMData,\n        getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemW3CClearKey(config) {\n    let instance;\n    const BASE64 = config.BASE64;\n    const logger = config.debug.getLogger(instance);\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionDataSet} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        let clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            const keyPairs = [];\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\n                const clearkeyID = jsonMsg.kids[i];\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n\n            logger.warn('ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    function getCDMData(/*cdmData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemW3CClearKey.__dashjs_factory_name = 'KeySystemW3CClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey); /* jshint ignore:line */\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine(config) {\n\n    config = config || {};\n    let instance;\n    const BASE64 = config.BASE64;\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage( /*message*/ ) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\n        return null;\n    }\n\n    function getCDMData(/*cdmData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid,\n        schemeIdURI,\n        systemString,\n        getInitData,\n        getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData,\n        getCDMData\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady DRM\n *\n * @class\n * @implements KeySystem\n */\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\nconst systemString = ProtectionConstants.PLAYREADY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\nconst PRCDMData = '<PlayReadyCDMData type=\"LicenseAcquisition\"><LicenseAcquisition version=\"1.0\" Proactive=\"false\"><CustomData encoding=\"base64encoded\">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>';\n\nfunction KeySystemPlayReady(config) {\n\n    config = config || {};\n    let instance;\n    let messageFormat = 'utf-16';\n    const BASE64 = config.BASE64;\n    const settings = config.settings;\n\n    function checkConfig() {\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray') || !BASE64.hasOwnProperty('decodeArray') ) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getRequestHeadersFromMessage(message) {\n        let msg,\n            xmlDoc;\n        const headers = {};\n        const parser = new DOMParser();\n\n        if (settings && settings.get().streaming.protection.detectPlayreadyMessageFormat) {\n            // If message format configured/defaulted to utf-16 AND number of bytes is odd, assume 'unwrapped' raw CDM message.\n            if (messageFormat === 'utf-16' && message && message.byteLength % 2 === 1) {\n                headers['Content-Type'] = 'text/xml; charset=utf-8';\n                return headers;\n            }\n        }\n\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        const headerNameList = xmlDoc.getElementsByTagName('name');\n        const headerValueList = xmlDoc.getElementsByTagName('value');\n        for (let i = 0; i < headerNameList.length; i++) {\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\n        }\n        // Some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\n        // this is NOT w3c conform and license servers may reject the request!\n        // -> rename it to proper w3c definition!\n        if (headers.hasOwnProperty('Content')) {\n            headers['Content-Type'] = headers.Content;\n            delete headers.Content;\n        }\n        // Set Content-Type header by default if not provided in the the CDM message (<PlayReadyKeyMessage/>)\n        // or if the message contains directly the challenge itself (Ex: LG SmartTVs)\n        if (!headers.hasOwnProperty('Content-Type')) {\n            headers['Content-Type'] = 'text/xml; charset=utf-8';\n        }\n        return headers;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        let licenseRequest = null;\n        const parser = new DOMParser();\n\n        if (settings && settings.get().streaming.protection.detectPlayreadyMessageFormat) {\n            // If message format configured/defaulted to utf-16 AND number of bytes is odd, assume 'unwrapped' raw CDM message.\n            if (messageFormat === 'utf-16' && message && message.byteLength % 2 === 1) {\n                return message;\n            }\n        }\n\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        checkConfig();\n        const msg = String.fromCharCode.apply(null, dataview);\n        const xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        if (xmlDoc.getElementsByTagName('PlayReadyKeyMessage')[0]) {\n            const Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\n            if (Challenge) {\n                licenseRequest = BASE64.decode(Challenge);\n            }\n        } else {\n            // The message from CDM is not a wrapped message as on IE11 and Edge,\n            // thus it contains direclty the challenge itself\n            // (note that the xmlDoc at this point may be unreadable since it may have been interpreted as UTF-16)\n            return message;\n        }\n\n        return licenseRequest;\n    }\n\n    function getLicenseServerURLFromInitData(initData) {\n        if (initData) {\n            const data = new DataView(initData);\n            const numRecords = data.getUint16(4, true);\n            let offset = 6;\n            const parser = new DOMParser();\n\n            for (let i = 0; i < numRecords; i++) {\n                // Parse the PlayReady Record header\n                const recordType = data.getUint16(offset, true);\n                offset += 2;\n                const recordLength = data.getUint16(offset, true);\n                offset += 2;\n                if (recordType !== 0x0001) {\n                    offset += recordLength;\n                    continue;\n                }\n\n                const recordData = initData.slice(offset, offset + recordLength);\n                const record = String.fromCharCode.apply(null, new Uint16Array(recordData));\n                const xmlDoc = parser.parseFromString(record, 'application/xml');\n\n                // First try <LA_URL>\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\n                    const laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\n                    if (laurl) {\n                        return laurl;\n                    }\n                }\n\n                // Optionally, try <LUI_URL>\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\n                    const luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\n                    if (luiurl) {\n                        return luiurl;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getInitData(cpData) {\n        // * desc@ getInitData\n        // *   generate PSSH data from PROHeader defined in MPD file\n        // *   PSSH format:\n        // *   size (4)\n        // *   box type(PSSH) (8)\n        // *   Protection SystemID (16)\n        // *   protection system data size (4) - length of decoded PROHeader\n        // *   decoded PROHeader data from MPD file\n        const PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\n        const playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\n\n        let byteCursor = 0;\n        let uint8arraydecodedPROHeader = null;\n\n        let PROSize,\n            PSSHSize,\n            PSSHBoxBuffer,\n            PSSHBox,\n            PSSHData;\n\n        checkConfig();\n        if (!cpData) {\n            return null;\n        }\n        // Handle common encryption PSSH\n        if ('pssh' in cpData) {\n            return CommonEncryption.parseInitDataFromContentProtection(cpData, BASE64);\n        }\n        // Handle native MS PlayReady ContentProtection elements\n        if ('pro' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\n        }\n        else if ('prheader' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\n        }\n        else {\n            return null;\n        }\n\n        PROSize = uint8arraydecodedPROHeader.length;\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\n\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\n\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\n        PSSHData = new DataView(PSSHBoxBuffer);\n\n        PSSHData.setUint32(byteCursor, PSSHSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(PSSHBoxType, byteCursor);\n        byteCursor += PSSHBoxType.length;\n\n        PSSHBox.set(playreadySystemID, byteCursor);\n        byteCursor += playreadySystemID.length;\n\n        PSSHData.setUint32(byteCursor, PROSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\n        byteCursor += PROSize;\n\n        return PSSHBox.buffer;\n    }\n\n    /**\n     * It seems that some PlayReady implementations return their XML-based CDM\n     * messages using UTF16, while others return them as UTF8.  Use this function\n     * to modify the message format to expect when parsing CDM messages.\n     *\n     * @param {string} format the expected message format.  Either \"utf-8\" or \"utf-16\".\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\n     */\n    function setPlayReadyMessageFormat(format) {\n        if (format !== 'utf-8' && format !== 'utf-16') {\n            throw new Error('Specified message format is not one of \"utf-8\" or \"utf-16\"');\n        }\n        messageFormat = format;\n    }\n\n    /**\n     * Get Playready Custom data\n     */\n    function getCDMData(_cdmData) {\n        let customData,\n            cdmData,\n            cdmDataBytes,\n            i;\n\n        checkConfig();\n        if (!_cdmData) return null;\n\n        // Convert custom data into multibyte string\n        customData = [];\n        for (i = 0; i < _cdmData.length; ++i) {\n            customData.push(_cdmData.charCodeAt(i));\n            customData.push(0);\n        }\n        customData = String.fromCharCode.apply(null, customData);\n\n        // Encode in Base 64 the custom data string\n        customData = BASE64.encode(customData);\n\n        // Initialize CDM data with Base 64 encoded custom data\n        // (see https://msdn.microsoft.com/en-us/library/dn457361.aspx)\n        cdmData = PRCDMData.replace('%CUSTOMDATA%', customData);\n\n        // Convert CDM data into multibyte characters\n        cdmDataBytes = [];\n        for (i = 0; i < cdmData.length; ++i) {\n            cdmDataBytes.push(cdmData.charCodeAt(i));\n            cdmDataBytes.push(0);\n        }\n\n        return new Uint8Array(cdmDataBytes).buffer;\n    }\n\n    instance = {\n        uuid,\n        schemeIdURI,\n        systemString,\n        getInitData,\n        getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData,\n        getCDMData,\n        setPlayReadyMessageFormat\n    };\n\n    return instance;\n}\n\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemPlayReady); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\n\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nfunction DRMToday(config) {\n\n    config = config || {};\n    const BASE64 = config.BASE64;\n\n    const keySystems = {};\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\n        responseType: 'json',\n        getLicenseMessage: function (response) {\n            return BASE64.decodeArray(response.license);\n        },\n        getErrorResponse: function (response) {\n            return response;\n        }\n    };\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\n        responseType: 'arraybuffer',\n        getLicenseMessage: function (response) {\n            return response;\n        },\n        getErrorResponse: function (response) {\n            return String.fromCharCode.apply(null, new Uint8Array(response));\n        }\n    };\n\n    let instance;\n\n    function checkConfig() {\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        checkConfig();\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage,\n        getHTTPMethod,\n        getResponseType,\n        getLicenseMessage,\n        getErrorResponse\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global escape: true */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n * @ignore\n */\n\nfunction PlayReady() {\n\n    let instance;\n\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\n\n    function uintToString(arrayBuffer) {\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n\n    function parseServerResponse(serverResponse) {\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n\n            if (fault) {\n                return null;\n            }\n        }\n        return serverResponse;\n    }\n\n    function parseErrorResponse(serverResponse) {\n        let faultstring = '';\n        let statusCode = '';\n        let message = '';\n        let idStart = -1;\n        let idEnd = -1;\n\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\n            let node = null;\n\n            if (fault === null) {\n                return stringResponse;\n            }\n\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\n            faultstring = node ? node.nodeValue : null;\n\n            if (exception !== null) {\n                node = exception.getElementsByTagName('StatusCode')[0];\n                statusCode = node ? node.firstChild.nodeValue : null;\n                node = exception.getElementsByTagName('Message')[0];\n                message = node ? node.firstChild.nodeValue : null;\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\n                idEnd = message ? message.indexOf(']') : -1;\n                message = message ? message.substring(idStart, idEnd) : '';\n            }\n        }\n\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\n        if (message) {\n            errorString += `, message: ${message}`;\n        }\n\n        return errorString;\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return parseServerResponse.call(this, serverResponse);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return parseErrorResponse.call(this, serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage,\n        getHTTPMethod,\n        getResponseType,\n        getLicenseMessage,\n        getErrorResponse\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @ignore\n */\nfunction Widevine() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage,\n        getHTTPMethod,\n        getResponseType,\n        getLicenseMessage,\n        getErrorResponse\n    };\n\n    return instance;\n}\n\nWidevine.__dashjs_factory_name = 'Widevine';\nexport default dashjs.FactoryMaker.getSingletonFactory(Widevine); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /* message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        let keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            let keypair = serverResponse.keys[i];\n            let keyid = keypair.kid.replace(/=/g, '');\n            let key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage,\n        getHTTPMethod,\n        getResponseType,\n        getLicenseMessage,\n        getErrorResponse\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from './../CommonEncryption';\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\nimport KeySystemW3CClearKey from './../drm/KeySystemW3CClearKey';\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\nimport DRMToday from './../servers/DRMToday';\nimport PlayReady from './../servers/PlayReady';\nimport Widevine from './../servers/Widevine';\nimport ClearKey from './../servers/ClearKey';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\n/**\n * @module ProtectionKeyController\n * @ignore\n * @description Media protection key system functionality that can be modified/overridden by applications\n */\nfunction ProtectionKeyController() {\n\n    let context = this.context;\n\n    let instance,\n        debug,\n        logger,\n        keySystems,\n        BASE64,\n        settings,\n        clearkeyKeySystem,\n        clearkeyW3CKeySystem;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.debug) {\n            debug = config.debug;\n            logger = debug.getLogger(instance);\n        }\n\n        if (config.BASE64) {\n            BASE64 = config.BASE64;\n        }\n\n        if(config.settings) {\n            settings = config.settings\n        }\n    }\n\n    function initialize() {\n        keySystems = [];\n\n        let keySystem;\n\n        // PlayReady\n        keySystem = KeySystemPlayReady(context).getInstance({BASE64: BASE64, settings: settings});\n        keySystems.push(keySystem);\n\n        // Widevine\n        keySystem = KeySystemWidevine(context).getInstance({BASE64: BASE64});\n        keySystems.push(keySystem);\n\n        // ClearKey\n        keySystem = KeySystemClearKey(context).getInstance({BASE64: BASE64});\n        keySystems.push(keySystem);\n        clearkeyKeySystem = keySystem;\n\n        // W3C ClearKey\n        keySystem = KeySystemW3CClearKey(context).getInstance({BASE64: BASE64, debug: debug});\n        keySystems.push(keySystem);\n        clearkeyW3CKeySystem = keySystem;\n    }\n\n    /**\n     * Returns a prioritized list of key systems supported\n     * by this player (not necessarily those supported by the\n     * user agent)\n     *\n     * @returns {Array.<KeySystem>} a prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystems() {\n        return keySystems;\n    }\n\n    /**\n     * Sets the prioritized list of key systems to be supported\n     * by this player.\n     *\n     * @param {Array.<KeySystem>} newKeySystems the new prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function setKeySystems(newKeySystems) {\n        keySystems = newKeySystems;\n    }\n\n    /**\n     * Returns the key system associated with the given key system string\n     * name (i.e. 'org.w3.clearkey')\n     *\n     * @param {string} systemString the system string\n     * @returns {KeySystem|null} the key system\n     * or null if no supported key system is associated with the given key\n     * system string\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystemBySystemString(systemString) {\n        for (let i = 0; i < keySystems.length; i++) {\n            if (keySystems[i].systemString === systemString) {\n                return keySystems[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Determines whether the given key system is ClearKey.  This is\n     * necessary because the EME spec defines ClearKey and its method\n     * for providing keys to the key session; and this method has changed\n     * between the various API versions.  Our EME-specific ProtectionModels\n     * must know if the system is ClearKey so that it can format the keys\n     * according to the particular spec version.\n     *\n     * @param {Object} keySystem the key\n     * @returns {boolean} true if this is the ClearKey key system, false\n     * otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function isClearKey(keySystem) {\n        return (keySystem === clearkeyKeySystem || keySystem === clearkeyW3CKeySystem);\n    }\n\n    /**\n     * Check equality of initData array buffers.\n     *\n     * @param {ArrayBuffer} initData1 - first initData\n     * @param {ArrayBuffer} initData2 - second initData\n     * @returns {boolean} true if the initData arrays are equal in size and\n     * contents, false otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function initDataEquals(initData1, initData2) {\n        if (initData1.byteLength === initData2.byteLength) {\n            let data1 = new Uint8Array(initData1);\n            let data2 = new Uint8Array(initData2);\n\n            for (let j = 0; j < data1.length; j++) {\n                if (data1[j] !== data2[j]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\n     * supported by the content\n     * @param {string} default session type\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType) {\n        let cp, ks, ksIdx, cpIdx;\n        let supportedKS = [];\n\n        if (cps) {\n            const cencContentProtection = CommonEncryption.findCencContentProtection(cps);\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n                ks = keySystems[ksIdx];\n\n                // Get protection data that applies for current key system\n                const protData = _getProtDataForKeySystem(ks.systemString, protDataSet);\n\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\n                    cp = cps[cpIdx];\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\n                        // Look for DRM-specific ContentProtection\n                        let initData = ks.getInitData(cp, cencContentProtection);\n\n                        supportedKS.push({\n                            ks: keySystems[ksIdx],\n                            keyId: cp.keyId,\n                            initData: initData,\n                            protData: protData,\n                            cdmData: ks.getCDMData(protData ? protData.cdmData : null),\n                            sessionId: _getSessionId(protData, cp),\n                            sessionType: _getSessionType(protData, sessionType)\n                        });\n                    }\n                }\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns key systems supported by this player for the given PSSH\n     * initializationData. Key systems are returned in priority order\n     * (highest priority first)\n     *\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\n     * supported by the content\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\n     * supported by the content\n     * @param {string} default session type\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromSegmentPssh(initData, protDataSet, sessionType) {\n        let supportedKS = [];\n        let pssh = CommonEncryption.parsePSSHList(initData);\n        let ks, keySystemString;\n\n        for (let ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n            ks = keySystems[ksIdx];\n            keySystemString = ks.systemString;\n\n            // Get protection data that applies for current key system\n            const protData = _getProtDataForKeySystem(keySystemString, protDataSet);\n\n            if (ks.uuid in pssh) {\n                supportedKS.push({\n                    ks: ks,\n                    initData: pssh[ks.uuid],\n                    protData: protData,\n                    cdmData: ks.getCDMData(protData ? protData.cdmData : null),\n                    sessionId: _getSessionId(protData),\n                    sessionType: _getSessionType(protData, sessionType)\n                });\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns the license server implementation data that should be used for this request.\n     *\n     * @param {KeySystem} keySystem the key system\n     * associated with this license request\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\n     * request.  Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @returns {LicenseServer|null} the license server\n     * implementation that should be used for this request or null if the player should not\n     * pass messages of the given type to a license server\n     * @memberof module:ProtectionKeyController\n     * @instance\n     *\n     */\n    function getLicenseServerModelInstance(keySystem, protData, messageType) {\n\n        // Our default server implementations do not do anything with \"license-release\" or\n        // \"individualization-request\" messages, so we just send a success event\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\n            return null;\n        }\n\n        let licenseServerData = null;\n        if (protData && protData.hasOwnProperty('drmtoday')) {\n            licenseServerData = DRMToday(context).getInstance({BASE64: BASE64});\n        } else if (keySystem.systemString === ProtectionConstants.WIDEVINE_KEYSTEM_STRING) {\n            licenseServerData = Widevine(context).getInstance();\n        } else if (keySystem.systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING) {\n            licenseServerData = PlayReady(context).getInstance();\n        } else if (keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING) {\n            licenseServerData = ClearKey(context).getInstance();\n        }\n\n        return licenseServerData;\n    }\n\n    /**\n     * Allows application-specific retrieval of ClearKey keys.\n     *\n     * @param {KeySystem} clearkeyKeySystem They exact ClearKey System to be used\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {ArrayBuffer} message the key message from the CDM\n     * @return {ClearKeyKeySet|null} the clear keys associated with\n     * the request or null if no keys can be returned by this function\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function processClearKeyLicenseRequest(clearkeyKeySystem, protData, message) {\n        try {\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\n        } catch (error) {\n            logger.error('Failed to retrieve clearkeys from ProtectionData');\n            return null;\n        }\n    }\n\n    function setProtectionData(protectionDataSet) {\n        var getProtectionData = function (keySystemString) {\n            var protData = null;\n            if (protectionDataSet) {\n                protData = (keySystemString in protectionDataSet) ? protectionDataSet[keySystemString] : null;\n            }\n            return protData;\n        };\n\n        for (var i = 0; i < keySystems.length; i++) {\n            var keySystem = keySystems[i];\n            if (keySystem.hasOwnProperty('init')) {\n                keySystem.init(getProtectionData(keySystem.systemString));\n            }\n        }\n    }\n\n    function _getProtDataForKeySystem(systemString, protDataSet) {\n        if (!protDataSet) return null;\n        return (systemString in protDataSet) ? protDataSet[systemString] : null;\n    }\n\n    function _getSessionId(protData, cp) {\n        // Get sessionId from protectionData or from manifest (ContentProtection)\n        if (protData && protData.sessionId) {\n            return protData.sessionId;\n        } else if (cp && cp.sessionId) {\n            return cp.sessionId;\n        }\n        return null;\n    }\n\n    function _getSessionType(protData, sessionType) {\n        return (protData && protData.sessionType) ? protData.sessionType : sessionType;\n    }\n\n    instance = {\n        initialize,\n        setProtectionData,\n        isClearKey,\n        initDataEquals,\n        getKeySystems,\n        setKeySystems,\n        getKeySystemBySystemString,\n        getSupportedKeySystemsFromContentProtection,\n        getSupportedKeySystemsFromSegmentPssh,\n        getLicenseServerModelInstance,\n        processClearKeyLicenseRequest,\n        setConfig\n    };\n\n    return instance;\n}\n\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\nexport default dashjs.FactoryMaker.getSingletonFactory(ProtectionKeyController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase';\n\n/**\n * @class\n */\nclass ProtectionEvents extends EventsBase {\n    /**\n     * @description Public facing external events to be used when including protection package.\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\n     */\n    constructor() {\n        super();\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         *\n         * @ignore\n         */\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\n\n        /**\n         * Event ID for events delivered when the status of one decryption keys has changed\n         * @ignore\n         */\n        this.INTERNAL_KEY_STATUS_CHANGED = 'internalkeyStatusChanged';\n\n        /**\n         * Event ID for events delivered when a new key has been added\n         *\n         * @constant\n         * @deprecated The latest versions of the EME specification no longer\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\n         * is preferred.\n         * @event ProtectionEvents#KEY_ADDED\n         */\n        this.KEY_ADDED = 'public_keyAdded';\n        /**\n         * Event ID for events delivered when an error is encountered by the CDM\n         * while processing a license server response message\n         * @event ProtectionEvents#KEY_ERROR\n         */\n        this.KEY_ERROR = 'public_keyError';\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         * @event ProtectionEvents#KEY_MESSAGE\n         */\n        this.KEY_MESSAGE = 'public_keyMessage';\n\n        /**\n         * Event ID for events delivered when a key session close\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\n         */\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\n\n        /**\n         * Event ID for events delivered when a new key sessions creation\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CREATED\n         */\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\n\n        /**\n         * Event ID for events delivered when a key session removal\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\n         */\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\n\n        /**\n         * Event ID for events delivered when the status of one or more\n         * decryption keys has changed\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\n         */\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\n\n        /**\n         * Event ID for events delivered when a key system access procedure\n         * has completed\n         * @event ProtectionEvents#KEY_SYSTEM_ACCESS_COMPLETE\n         */\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\n         */\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\n\n        /**\n         * Event ID for events delivered when a license request procedure\n         * has completed\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\n         */\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\n\n        /**\n         * Sending a license rquest\n         * @event ProtectionEvents#LICENSE_REQUEST_SENDING\n         */\n        this.LICENSE_REQUEST_SENDING = 'public_licenseRequestSending';\n\n        /**\n         * Event ID for needkey/encrypted events\n         * @ignore\n         */\n        this.NEED_KEY = 'needkey';\n\n        /**\n         * Event ID for events delivered when the Protection system is detected and created.\n         * @event ProtectionEvents#PROTECTION_CREATED\n         */\n        this.PROTECTION_CREATED = 'public_protectioncreated';\n\n        /**\n         * Event ID for events delivered when the Protection system is destroyed.\n         * @event ProtectionEvents#PROTECTION_DESTROYED\n         */\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\n\n        /**\n         * Event ID for events delivered when a new server certificate has\n         * been delivered to the CDM\n         * @ignore\n         */\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\n\n        /**\n         * Event ID for events delivered when the process of shutting down\n         * a protection set has completed\n         * @ignore\n         */\n        this.TEARDOWN_COMPLETE = 'protectionTeardownComplete';\n\n        /**\n         * Event ID for events delivered when a HTMLMediaElement has been\n         * associated with the protection set\n         * @ignore\n         */\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\n\n        /**\n         * Triggered when the key session has been updated successfully\n         * @ignore\n         */\n        this.KEY_SESSION_UPDATED = 'public_keySessionUpdated';\n    }\n}\n\nlet protectionEvents = new ProtectionEvents();\nexport default protectionEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc NeedKey\n * @ignore\n */\nclass NeedKey {\n    /**\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {string} initDataType initialization data type\n     * @class\n     */\n    constructor(initData, initDataType) {\n        this.initData = initData;\n        this.initDataType = initDataType;\n    }\n}\n\nexport default NeedKey;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc EME-independent KeyMessage\n * @ignore\n */\nclass KeyMessage {\n    /**\n     * @param {SessionToken} sessionToken the session\n     * to which the key message is associated\n     * @param {ArrayBuffer} message the key message\n     * @param {string} defaultURL license acquisition URL provided by the CDM\n     * @param {string} messageType Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @class\n     */\n    constructor(sessionToken, message, defaultURL, messageType) {\n        this.sessionToken = sessionToken;\n        this.message = message;\n        this.defaultURL = defaultURL;\n        this.messageType = messageType ? messageType : 'license-request';\n    }\n}\n\nexport default KeyMessage;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Creates a new key system access token.  Represents a valid key system for\n * given piece of content and key system requirements.  Used to initialize license\n * acquisition operations.\n * @ignore\n */\nclass KeySystemAccess {\n    /**\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\n     * @param {KeySystemConfiguration} ksConfiguration the\n     * subset of configurations passed to the key system access request that are supported\n     * by this user agent\n     * @class\n     * @ignore\n     */\n    constructor(keySystem, ksConfiguration) {\n        this.keySystem = keySystem;\n        this.ksConfiguration = ksConfiguration;\n    }\n}\n\nexport default KeySystemAccess;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport DashJSError from '../../vo/DashJSError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst SYSTEM_STRING_PRIORITY = {};\nSYSTEM_STRING_PRIORITY[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = [ProtectionConstants.PLAYREADY_KEYSTEM_STRING, ProtectionConstants.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING];\nSYSTEM_STRING_PRIORITY[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = [ProtectionConstants.WIDEVINE_KEYSTEM_STRING];\nSYSTEM_STRING_PRIORITY[ProtectionConstants.CLEARKEY_KEYSTEM_STRING] = [ProtectionConstants.CLEARKEY_KEYSTEM_STRING];\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n\n    let instance,\n        logger,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        const numSessions = sessions.length;\n        let session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            const done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (let i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    _closeKeySessionInternal(session)\n                    done(s);\n                })(session);\n            }\n        } else {\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function stop() {\n        // Close and remove not usable sessions\n        let session;\n        for (let i = 0; i < sessions.length; i++) {\n            session = sessions[i];\n            if (!session.getUsable()) {\n                _closeKeySessionInternal(session)\n                removeSession(session);\n            }\n        }\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i].initData) {\n                retVal.push(sessions[i].initData);\n            }\n        }\n        return retVal;\n    }\n\n    function getSessions() {\n        return sessions;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        return new Promise((resolve, reject) => {\n            _requestKeySystemAccessInternal(ksConfigurations, 0, resolve, reject);\n        })\n    }\n\n    /**\n     * Initializes access to a key system. Once we found a valid configuration we get a mediaKeySystemAccess object\n     * @param ksConfigurations\n     * @param idx\n     * @param resolve\n     * @param reject\n     * @private\n     */\n    function _requestKeySystemAccessInternal(ksConfigurations, idx, resolve, reject) {\n\n        // In case requestMediaKeySystemAccess is not available we can not proceed and dispatch an error\n        if (navigator.requestMediaKeySystemAccess === undefined ||\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\n            const msg = 'Insecure origins are not allowed';\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: msg });\n            reject({ error: msg });\n            return;\n        }\n\n        // If a systemStringPriority is defined by the application we use these values. Otherwise we use the default system string\n        // This is useful for DRM systems such as Playready for which multiple system strings are possible for instance com.microsoft.playready and com.microsoft.playready.recommendation\n        const protDataSystemStringPriority = ksConfigurations[idx].protData && ksConfigurations[idx].protData.systemStringPriority ? ksConfigurations[idx].protData.systemStringPriority : null;\n        const configs = ksConfigurations[idx].configs;\n        const currentKeySystem = ksConfigurations[idx].ks;\n        let systemString = currentKeySystem.systemString;\n\n        // Use the default values in case no values are provided by the application\n        const systemStringsToApply = protDataSystemStringPriority ? protDataSystemStringPriority : SYSTEM_STRING_PRIORITY[systemString] ? SYSTEM_STRING_PRIORITY[systemString] : [systemString];\n\n        // Check all the available system strings and the available configurations for support\n        _checkAccessForKeySystem(systemStringsToApply, configs)\n            .then((mediaKeySystemAccess) => {\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                    mediaKeySystemAccess.getConfiguration() : null;\n                const keySystemAccess = new KeySystemAccess(currentKeySystem, configuration);\n\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\n                resolve({ data: keySystemAccess });\n            })\n            .catch((e) => {\n                if (idx + 1 < ksConfigurations.length) {\n                    _requestKeySystemAccessInternal(ksConfigurations, idx + 1, resolve, reject);\n                } else {\n                    const errorMessage = 'Key system access denied! ';\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage + e.message });\n                    reject({ error: errorMessage + e.message });\n                }\n            })\n    }\n\n    /**\n     * For a specific key system: Iterate over the possible system strings and resolve once a valid configuration was found\n     * @param {array} systemStringsToApply\n     * @param {object} configs\n     * @return {Promise}\n     * @private\n     */\n    function _checkAccessForKeySystem(systemStringsToApply, configs) {\n        return new Promise((resolve, reject) => {\n            _checkAccessForSystemStrings(systemStringsToApply, configs, 0, resolve, reject);\n        })\n    }\n\n    /**\n     * Recursively iterate over the possible system strings until a supported configuration is found or we ran out of options\n     * @param {array} systemStringsToApply\n     * @param {object} configs\n     * @param {number} idx\n     * @param {function} resolve\n     * @param {function} reject\n     * @private\n     */\n    function _checkAccessForSystemStrings(systemStringsToApply, configs, idx, resolve, reject) {\n        const systemString = systemStringsToApply[idx];\n\n        logger.debug(`Requesting key system access for system string ${systemString}`);\n\n        navigator.requestMediaKeySystemAccess(systemString, configs)\n            .then((mediaKeySystemAccess) => {\n                mediaKeySystemAccess.selectedSystemString = systemString;\n                resolve(mediaKeySystemAccess);\n            })\n            .catch((e) => {\n                if (idx + 1 < systemStringsToApply.length) {\n                    _checkAccessForSystemStrings(systemStringsToApply, configs, idx + 1, resolve, reject);\n                } else {\n                    reject(e);\n                }\n            });\n    }\n\n    /**\n     * Selects a key system by creating the mediaKeys and adding them to the video element\n     * @param keySystemAccess\n     * @return {Promise<unknown>}\n     */\n    function selectKeySystem(keySystemAccess) {\n        return new Promise((resolve, reject) => {\n            keySystemAccess.mksa.createMediaKeys()\n                .then((mkeys) => {\n                    keySystem = keySystemAccess.keySystem;\n                    mediaKeys = mkeys;\n                    if (videoElement) {\n                        return videoElement.setMediaKeys(mediaKeys)\n                    } else {\n                        return Promise.resolve();\n                    }\n                })\n                .then(() => {\n                    resolve(keySystem);\n                })\n                .catch(function () {\n                    reject({ error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\n                });\n        })\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys) {\n                videoElement.setMediaKeys(null);\n            }\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys && mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            logger.info('DRM: License server certificate successfully updated.');\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, { error: new DashJSError(ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + error.name) });\n        });\n    }\n\n    /**\n     * Create a key session, a session token and initialize a request by calling generateRequest\n     * @param ksInfo\n     */\n    function createKeySession(ksInfo) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        const session = mediaKeys.createSession(ksInfo.sessionType);\n        const sessionToken = createSessionToken(session, ksInfo);\n\n\n        // The \"keyids\" type is used for Clearkey when keys are provided directly in the protection data and a request to a license server is not needed\n        const dataType = keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && (ksInfo.initData || (ksInfo.protData && ksInfo.protData.clearkeys)) ? ProtectionConstants.INITIALIZATION_DATA_TYPE_KEYIDS : ProtectionConstants.INITIALIZATION_DATA_TYPE_CENC;\n\n        session.generateRequest(dataType, ksInfo.initData).then(function () {\n            logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\n            eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n        }).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Error generating key request -- ' + error.name)\n            });\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message)\n            .then(() => {\n                eventBus.trigger(events.KEY_SESSION_UPDATED);\n            })\n            .catch(function (error) {\n                eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, 'Error sending update() message! ' + error.name, sessionToken) });\n            });\n    }\n\n    function loadKeySession(ksInfo) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        const sessionId = ksInfo.sessionId;\n\n        // Check if session Id is not already loaded or loading\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessionId === sessions[i].sessionId) {\n                logger.warn('DRM: Ignoring session ID because we have already seen it!');\n                return;\n            }\n        }\n\n        const session = mediaKeys.createSession(ksInfo.sessionType);\n        const sessionToken = createSessionToken(session, ksInfo);\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionId).then(function (success) {\n            if (success) {\n                logger.debug('DRM: Session loaded.  SessionID = ' + sessionToken.getSessionId());\n                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n            } else {\n                removeSession(sessionToken);\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\n                    data: null,\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session! Invalid Session ID (' + sessionId + ')')\n                });\n            }\n        }).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session (' + sessionId + ')! ' + error.name)\n            });\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        session.remove().then(function () {\n            logger.debug('DRM: Session removed.  SessionID = ' + sessionToken.getSessionId());\n            eventBus.trigger(events.KEY_SESSION_REMOVED, { data: sessionToken.getSessionId() });\n        }, function (error) {\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {\n                data: null,\n                error: 'Error removing session (' + sessionToken.getSessionId() + '). ' + error.name\n            });\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        _closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\n                data: null,\n                error: 'Error closing session (' + sessionToken.getSessionId() + ') ' + error.name\n            });\n        });\n    }\n\n    function _closeKeySessionInternal(sessionToken) {\n        if (!sessionToken || !sessionToken.session) {\n            return Promise.resolve;\n        }\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'encrypted':\n                        if (event.initData) {\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, event.initDataType) });\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    function parseKeyStatus(args) {\n        // Edge and Chrome implement different version of keystatues, param are not on same order\n        let status, keyId;\n        if (args && args.length > 0) {\n            if (args[0]) {\n                if (typeof args[0] === 'string') {\n                    status = args[0];\n                } else {\n                    keyId = args[0];\n                }\n            }\n\n            if (args[1]) {\n                if (typeof args[1] === 'string') {\n                    status = args[1];\n                } else {\n                    keyId = args[1];\n                }\n            }\n        }\n        return {\n            status: status,\n            keyId: keyId\n        };\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, ksInfo) {\n        const token = { // Implements SessionToken\n            session: session,\n            keyId: ksInfo.keyId,\n            initData: ksInfo.initData,\n            sessionId: ksInfo.sessionId,\n            sessionType: ksInfo.sessionType,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: this });\n                        event.target.keyStatuses.forEach(function () {\n                            let keyStatus = parseKeyStatus(arguments);\n                            switch (keyStatus.status) {\n                                case 'expired':\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, { error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE) });\n                                    break;\n                                default:\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, keyStatus);\n                                    break;\n                            }\n                        });\n                        break;\n\n                    case 'message':\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, undefined, event.messageType) });\n                        break;\n                }\n            },\n\n            getKeyId: function () {\n                return this.keyId;\n            },\n\n            getSessionId: function () {\n                return session.sessionId;\n            },\n\n            getSessionType: function () {\n                return this.sessionType;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getUsable: function () {\n                let usable = false;\n                session.keyStatuses.forEach(function () {\n                    let keyStatus = parseKeyStatus(arguments);\n                    if (keyStatus.status === 'usable') {\n                        usable = true;\n                    }\n                });\n                return usable;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(() => {\n            removeSession(token);\n            logger.debug('DRM: Session closed.  SessionID = ' + token.getSessionId());\n            eventBus.trigger(events.KEY_SESSION_CLOSED, { data: token.getSessionId() });\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData,\n        getSessions,\n        requestKeySystemAccess,\n        selectKeySystem,\n        setMediaElement,\n        setServerCertificate,\n        createKeySession,\n        updateKeySession,\n        loadKeySession,\n        removeKeySession,\n        closeKeySession,\n        stop,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport DashJSError from '../../vo/DashJSError';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n    const api = config.api;\n\n    let instance,\n        logger,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (let i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(events.TEARDOWN_COMPLETE, { error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message });\n        }\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function getSessions() {\n        return sessions;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        return new Promise((resolve, reject) => {\n            // Try key systems in order, first one with supported key system configuration\n            // is used\n            let found = false;\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\n                const configs = ksConfigurations[ksIdx].configs;\n                let supportedAudio = null;\n                let supportedVideo = null;\n\n                // Try key system configs in order, first one with supported audio/video\n                // is used\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\n                    const audios = configs[configIdx].audioCapabilities;\n                    const videos = configs[configIdx].videoCapabilities;\n\n                    // Look for supported audio container/codecs\n                    if (audios && audios.length !== 0) {\n                        supportedAudio = []; // Indicates that we have a requested audio config\n                        for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                            if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                                supportedAudio.push(audios[audioIdx]);\n                            }\n                        }\n                    }\n\n                    // Look for supported video container/codecs\n                    if (videos && videos.length !== 0) {\n                        supportedVideo = []; // Indicates that we have a requested video config\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                            if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                                supportedVideo.push(videos[videoIdx]);\n                            }\n                        }\n                    }\n\n                    // No supported audio or video in this configuration OR we have\n                    // requested audio or video configuration that is not supported\n                    if ((!supportedAudio && !supportedVideo) ||\n                        (supportedAudio && supportedAudio.length === 0) ||\n                        (supportedVideo && supportedVideo.length === 0)) {\n                        continue;\n                    }\n\n                    // This configuration is supported\n                    found = true;\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig);\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\n                    resolve({ data: keySystemAccess });\n                    break;\n                }\n            }\n            if (!found) {\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\n                reject({ error: errorMessage });\n            }\n        })\n    }\n\n    function selectKeySystem(ksAccess) {\n        return new Promise((resolve, reject) => {\n            try {\n                mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n                keySystem = ksAccess.keySystem;\n                keySystemAccess = ksAccess;\n                if (videoElement) {\n                    setMediaKeys();\n                }\n                resolve(keySystem);\n            } catch (error) {\n                reject({ error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\n            }\n        })\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(ksInfo) {\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        let capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities && keySystemAccess.ksConfiguration.videoCapabilities.length > 0) {\n            capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n        }\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities && keySystemAccess.ksConfiguration.audioCapabilities.length > 0) {\n            capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n        }\n\n        if (capabilities === null) {\n            throw new Error('Can not create sessions for unknown content types.');\n        }\n\n        const contentType = capabilities.contentType;\n        const session = mediaKeys.createSession(contentType, new Uint8Array(ksInfo.initData), ksInfo.cdmData ? new Uint8Array(ksInfo.cdmData) : null);\n        const sessionToken = createSessionToken(session, ksInfo);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\n        eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param {Object} sessionToken - the session token\n     */\n    function closeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i, 1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\n    }\n\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\n    }\n\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\n    }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            const initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        let boundDoSetKeys = null;\n        const doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, ksInfo) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            keyId: ksInfo.keyId,\n            initData: ksInfo.initData,\n\n            getKeyId: function () {\n                return this.keyId;\n            },\n\n            getSessionId: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case api.error:\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, errorStr, this) });\n                        break;\n                    case api.message:\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        logger.debug('DRM: Key added.');\n                        eventBus.trigger(events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        logger.debug('DRM: Session closed.  SessionID = ' + this.getSessionId());\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionId() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData,\n        getSessions,\n        requestKeySystemAccess,\n        selectKeySystem,\n        setMediaElement,\n        createKeySession,\n        updateKeySession,\n        closeKeySession,\n        setServerCertificate,\n        loadKeySession,\n        removeKeySession,\n        stop: reset,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Initial implementation of EME\n *\n * Implemented by Google Chrome prior to v36\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport DashJSError from '../../vo/DashJSError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport ProtectionErrors from '../errors/ProtectionErrors';\n\nfunction ProtectionModel_01b(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n    const api = config.api;\n    const errHandler = config.errHandler;\n\n    let instance,\n        logger,\n        videoElement,\n        keySystem,\n        protectionKeyController,\n\n        // With this version of the EME APIs, sessionIds are not assigned to\n        // sessions until the first key message is received.  We are assuming\n        // that in the case of multiple sessions, key messages will be received\n        // in the order that generateKeyRequest() is called.\n        // Holding spot for newly-created sessions until we determine whether or\n        // not the CDM supports sessionIds\n        pendingSessions,\n\n        // List of sessions that have been initialized.  Only the first position will\n        // be used in the case that the CDM does not support sessionIds\n        sessions,\n\n        // Not all CDMs support the notion of sessionIds.  Without sessionIds\n        // there is no way for us to differentiate between sessions, therefore\n        // we must only allow a single session.  Once we receive the first key\n        // message we can set this flag to determine if more sessions are allowed\n        moreSessionsAllowed,\n\n        // This is our main event handler for all desired HTMLMediaElement events\n        // related to EME.  These events are translated into our API-independent\n        // versions of the same events\n        eventHandler;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        videoElement = null;\n        keySystem = null;\n        pendingSessions = [];\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        if (videoElement) {\n            removeEventListeners();\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            closeKeySession(sessions[i]);\n        }\n        eventBus.trigger(events.TEARDOWN_COMPLETE);\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < pendingSessions.length; i++) {\n            retVal.push(pendingSessions[i].initData);\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function getSessions() {\n        return sessions.concat(pendingSessions);\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        return new Promise((resolve, reject) => {\n            let ve = videoElement;\n            if (!ve) { // Must have a video element to do this capability tests\n                ve = document.createElement('video');\n            }\n\n            // Try key systems in order, first one with supported key system configuration\n            // is used\n            let found = false;\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\n                const configs = ksConfigurations[ksIdx].configs;\n                let supportedAudio = null;\n                let supportedVideo = null;\n\n                // Try key system configs in order, first one with supported audio/video\n                // is used\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\n                    //let audios = configs[configIdx].audioCapabilities;\n                    const videos = configs[configIdx].videoCapabilities;\n                    // Look for supported video container/codecs\n                    if (videos && videos.length !== 0) {\n                        supportedVideo = []; // Indicates that we have a requested video config\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                            if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\n                                supportedVideo.push(videos[videoIdx]);\n                            }\n                        }\n                    }\n\n                    // No supported audio or video in this configuration OR we have\n                    // requested audio or video configuration that is not supported\n                    if ((!supportedAudio && !supportedVideo) ||\n                        (supportedAudio && supportedAudio.length === 0) ||\n                        (supportedVideo && supportedVideo.length === 0)) {\n                        continue;\n                    }\n\n                    // This configuration is supported\n                    found = true;\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig)\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\n                    resolve({ data: keySystemAccess });\n                    break;\n                }\n            }\n            if (!found) {\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\n                reject({ error: errorMessage });\n            }\n        })\n\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystem = keySystemAccess.keySystem;\n        return Promise.resolve(keySystem);\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement) {\n            return;\n        }\n\n        // Replacing the previous element\n        if (videoElement) {\n            removeEventListeners();\n\n            // Close any open sessions - avoids memory leak on LG webOS 2016/2017 TVs\n            for (var i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            sessions = [];\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.keyerror, eventHandler);\n            videoElement.addEventListener(api.needkey, eventHandler);\n            videoElement.addEventListener(api.keymessage, eventHandler);\n            videoElement.addEventListener(api.keyadded, eventHandler);\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\n        }\n    }\n\n    function createKeySession(ksInfo) {\n        if (!keySystem) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Determine if creating a new session is allowed\n        if (moreSessionsAllowed || sessions.length === 0) {\n            const newSession = { // Implements SessionToken\n                sessionId: null,\n                keyId: ksInfo.keyId,\n                initData: ksInfo.initData,\n\n                getKeyId: function () {\n                    return this.keyId;\n                },\n\n                getSessionId: function () {\n                    return this.sessionId;\n                },\n\n                getExpirationTime: function () {\n                    return NaN;\n                },\n\n                getSessionType: function () {\n                    return 'temporary';\n                }\n            };\n            pendingSessions.push(newSession);\n\n            // Send our request to the CDM\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(ksInfo.initData));\n\n            return newSession;\n\n        } else {\n            throw new Error('Multiple sessions not allowed!');\n        }\n\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const sessionId = sessionToken.sessionId;\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the CDM\n            videoElement[api.addKey](keySystem.systemString,\n                new Uint8Array(message), new Uint8Array(sessionToken.initData), sessionId);\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            for (let i = 0; i < message.keyPairs.length; i++) {\n                videoElement[api.addKey](keySystem.systemString,\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionId);\n            }\n        }\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the CDM\n        try {\n            videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionId);\n        } catch (error) {\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\n                data: null,\n                error: 'Error closing session (' + sessionToken.sessionId + ') ' + error.message\n            });\n        }\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\n    }\n\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\n    }\n\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\n    }\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                let sessionToken = null;\n                switch (event.type) {\n                    case api.needkey:\n                        let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                        eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\n                        break;\n\n                    case api.keyerror:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            let code = ProtectionErrors.MEDIA_KEYERR_CODE;\n                            let msg = '';\n                            switch (event.errorCode.code) {\n                                case 1:\n                                    code = ProtectionErrors.MEDIA_KEYERR_UNKNOWN_CODE;\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - ' + ProtectionErrors.MEDIA_KEYERR_UNKNOWN_MESSAGE;\n                                    break;\n                                case 2:\n                                    code = ProtectionErrors.MEDIA_KEYERR_CLIENT_CODE;\n                                    msg += 'MEDIA_KEYERR_CLIENT - ' + ProtectionErrors.MEDIA_KEYERR_CLIENT_MESSAGE;\n                                    break;\n                                case 3:\n                                    code = ProtectionErrors.MEDIA_KEYERR_SERVICE_CODE;\n                                    msg += 'MEDIA_KEYERR_SERVICE - ' + ProtectionErrors.MEDIA_KEYERR_SERVICE_MESSAGE;\n                                    break;\n                                case 4:\n                                    code = ProtectionErrors.MEDIA_KEYERR_OUTPUT_CODE;\n                                    msg += 'MEDIA_KEYERR_OUTPUT - ' + ProtectionErrors.MEDIA_KEYERR_OUTPUT_MESSAGE;\n                                    break;\n                                case 5:\n                                    code = ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_CODE;\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - ' + ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;\n                                    break;\n                                case 6:\n                                    code = ProtectionErrors.MEDIA_KEYERR_DOMAIN_CODE;\n                                    msg += 'MEDIA_KEYERR_DOMAIN - ' + ProtectionErrors.MEDIA_KEYERR_DOMAIN_MESSAGE;\n                                    break;\n                            }\n                            msg += '  System Code = ' + event.systemCode;\n                            // TODO: Build error string based on key error\n                            eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(code, msg, sessionToken) });\n                        } else {\n                            logger.error('No session token found for key error');\n                        }\n                        break;\n\n                    case api.keyadded:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            logger.debug('DRM: Key added.');\n                            eventBus.trigger(events.KEY_ADDED, { data: sessionToken });//TODO not sure anything is using sessionToken? why there?\n                        } else {\n                            logger.debug('No session token found for key added');\n                        }\n                        break;\n\n                    case api.keymessage:\n                        // If this CDM does not support session IDs, we will be limited\n                        // to a single session\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\n\n                        // SessionIDs supported\n                        if (moreSessionsAllowed) {\n                            // Attempt to find an uninitialized token with this sessionId\n                            sessionToken = findSessionByID(sessions, event.sessionId);\n                            if (!sessionToken && pendingSessions.length > 0) {\n\n                                // This is the first message for our latest session, so set the\n                                // sessionId and add it to our list\n                                sessionToken = pendingSessions.shift();\n                                sessions.push(sessionToken);\n                                sessionToken.sessionId = event.sessionId;\n\n                                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n                            }\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\n                            sessionToken = pendingSessions.shift();\n                            sessions.push(sessionToken);\n\n                            if (pendingSessions.length !== 0) {\n                                errHandler.error(new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_MESSAGE));\n                            }\n                        }\n\n                        if (sessionToken) {\n                            let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n\n                            // For ClearKey, the spec mandates that you pass this message to the\n                            // addKey method, so we always save it to the token since there is no\n                            // way to tell which key system is in use\n                            sessionToken.keyMessage = message;\n                            eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(sessionToken, message, event.defaultURL) });\n\n                        } else {\n                            logger.warn('No session token found for key message');\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    /**\n     * Helper function to retrieve the stored session token based on a given\n     * sessionId value\n     *\n     * @param {Array} sessionArray - the array of sessions to search\n     * @param {*} sessionId - the sessionId to search for\n     * @returns {*} the session token with the given sessionId\n     */\n    function findSessionByID(sessionArray, sessionId) {\n        if (!sessionId || !sessionArray) {\n            return null;\n        } else {\n            const len = sessionArray.length;\n            for (let i = 0; i < len; i++) {\n                if (sessionArray[i].sessionId == sessionId) {\n                    return sessionArray[i];\n                }\n            }\n            return null;\n        }\n    }\n\n    function removeEventListeners() {\n        videoElement.removeEventListener(api.keyerror, eventHandler);\n        videoElement.removeEventListener(api.needkey, eventHandler);\n        videoElement.removeEventListener(api.keymessage, eventHandler);\n        videoElement.removeEventListener(api.keyadded, eventHandler);\n    }\n\n    instance = {\n        getAllInitData,\n        getSessions,\n        requestKeySystemAccess,\n        selectKeySystem,\n        setMediaElement,\n        createKeySession,\n        updateKeySession,\n        closeKeySession,\n        setServerCertificate,\n        loadKeySession,\n        removeKeySession,\n        stop: reset,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_01b); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController';\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\nimport ProtectionEvents from './ProtectionEvents';\nimport ProtectionErrors from './errors/ProtectionErrors';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n    let instance;\n    const context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @param {Object} config\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n        let controller = null;\n\n        const protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({ debug: config.debug, BASE64: config.BASE64, settings: config.settings });\n        protectionKeyController.initialize();\n\n        let protectionModel = _getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                eventBus: config.eventBus,\n                debug: config.debug,\n                events: config.events,\n                BASE64: config.BASE64,\n                constants: config.constants,\n                cmcdModel: config.cmcdModel,\n                customParametersModel: config.customParametersModel,\n                settings: config.settings\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function _getProtectionModel(config) {\n        const debug = config.debug;\n        const logger = debug.getLogger(instance);\n        const eventBus = config.eventBus;\n        const errHandler = config.errHandler;\n        const videoElement = config.videoModel ? config.videoModel.getElement() : null;\n\n        if ((!videoElement || videoElement.onencrypted !== undefined) &&\n            (!videoElement || videoElement.mediaKeys !== undefined)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({\n                debug: debug,\n                eventBus: eventBus,\n                events: config.events\n            });\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({\n                debug: debug,\n                eventBus: eventBus,\n                events: config.events,\n                api: _getAPI(videoElement, APIS_ProtectionModel_3Feb2014)\n            });\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_01b)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({\n                debug: debug,\n                eventBus: eventBus,\n                errHandler: errHandler,\n                events: config.events,\n                api: _getAPI(videoElement, APIS_ProtectionModel_01b)\n            });\n        } else {\n            logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n        }\n    }\n\n    function _getAPI(videoElement, apis) {\n        for (let i = 0; i < apis.length; i++) {\n            const api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nconst factory = dashjs.FactoryMaker.getClassFactory(Protection); /* jshint ignore:line */\nfactory.events = ProtectionEvents;\nfactory.errors = ProtectionErrors;\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory;\n"],"names":["root","factory","exports","module","define","amd","self","instance","singletonContexts","singletonFactories","classFactories","getSingletonInstance","context","className","i","obj","name","getFactoryByName","factoriesArray","updateFactory","merge","classConstructor","args","classInstance","__dashjs_factory_name","extensionObject","extension","override","apply","prop","parent","hasOwnProperty","getClassName","extend","childInstance","setSingletonInstance","push","deleteSingletonInstances","filter","x","getSingletonFactory","undefined","getInstance","arguments","getSingletonFactoryByName","updateSingletonFactory","getClassFactory","create","getClassFactoryByName","updateClassFactory","Utils","_classCallCheck","key","value","dest","source","copy","s","empty","_typeof","mixin","src","r","Array","l","length","clone","url","params","modifiedUrl","URL","forEach","param","searchParams","set","href","e","headerStr","headers","headerPairs","trim","split","ilen","headerPair","index","indexOf","substring","dt","Date","getTime","replace","c","Math","random","floor","toString","string","hash","charCodeAt","originalUrl","targetUrl","original","target","protocol","origin","relativePath","path","pathname","substr","lastIndexOf","startIndexOffset","ua","uaString","navigator","userAgent","toLowerCase","UAParser","test","ErrorsBase","errors","config","publicOnly","err","this","EventsBase","events","evt","Constants","init","MESH","STREAM","VIDEO","AUDIO","TEXT","MUXED","IMAGE","STPP","TTML","VTT","WVTT","CONTENT_STEERING","ABR_STRATEGY_DYNAMIC","ABR_STRATEGY_BOLA","ABR_STRATEGY_L2A","ABR_STRATEGY_LoLP","ABR_STRATEGY_THROUGHPUT","ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA","ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING","ABR_FETCH_THROUGHPUT_CALCULATION_AAST","LIVE_CATCHUP_MODE_DEFAULT","LIVE_CATCHUP_MODE_LOLP","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","BAD_ARGUMENT_ERROR","MISSING_CONFIG_ERROR","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","TRACK_SELECTION_MODE_FIRST_TRACK","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","TRACK_SELECTION_MODE_WIDEST_RANGE","TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY","CMCD_MODE_QUERY","CMCD_MODE_HEADER","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","TEXT_DISABLED","CC1","CC3","UTF8","SCHEME_ID_URI","START_TIME","SERVICE_DESCRIPTION_DVB_LL_SCHEME","SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME","FONT_DOWNLOAD_DVB_SCHEME","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","OFF_MIMETYPE","WOFF_MIMETYPE","VIDEO_ELEMENT_READY_STATES","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","FILE_LOADER_TYPES","FETCH","XHR","_createClass","DashJSError","code","message","data","HTTPRequest","tcpid","type","actualurl","range","trequest","tresponse","responsecode","interval","trace","cmsd","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","CONTENT_STEERING_TYPE","OTHER_TYPE","assertPath","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","base","_format","parse","ret","delimiter","win32","window","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MAJOR","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SHARP","SONY","XIAOMI","ZEBRA","FACEBOOK","CHROMIUM_OS","MAC_OS","enumerize","arr","enums","toUpperCase","has","str1","str2","lowerize","str","len","rgxMapper","arrays","j","k","p","q","matches","match","regex","props","exec","call","strMapper","map","windowsVersionMap","regexes","browser","cpu","device","engine","EDGE","os","extensions","getResult","_navigator","_ua","_uach","userAgentData","_rgxmap","mergedRegexes","concat","_isSelfNav","getBrowser","version","_browser","brave","isBrave","getCPU","_cpu","getDevice","_device","mobile","standalone","maxTouchPoints","getEngine","_engine","getOS","_os","platform","getUA","setUA","CPU","DEVICE","ENGINE","OS","$","jQuery","Zepto","parser","get","result","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","prototype","LICENSE_SERVER_MANIFEST_CONFIGURATIONS","attributes","prefixes","CommonEncryption","cpArray","retVal","cp","schemeIdUri","pssh","offset","view","DataView","getUint8","getUint32","keySystem","initData","psshList","parsePSSHList","uuid","cpData","BASE64","__text","decodeArray","buffer","dv","byteCursor","nextBox","systemID","boxStart","byteLength","val","mediaInfo","licenseServer","info","contentProtection","targetProtectionData","ckData","attribute","prefix","__prefix","MediaCapability","contentType","robustness","KeySystemConfiguration","audioCapabilities","videoCapabilities","distinctiveIdentifier","persistentState","sessionTypes","initDataTypes","_ErrorsBase","ProtectionErrors","_this","_callSuper","MEDIA_KEYERR_CODE","MEDIA_KEYERR_UNKNOWN_CODE","MEDIA_KEYERR_CLIENT_CODE","MEDIA_KEYERR_SERVICE_CODE","MEDIA_KEYERR_OUTPUT_CODE","MEDIA_KEYERR_HARDWARECHANGE_CODE","MEDIA_KEYERR_DOMAIN_CODE","MEDIA_KEY_MESSAGE_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE","SERVER_CERTIFICATE_UPDATED_ERROR_CODE","KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE","KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE","KEY_SESSION_CREATED_ERROR_CODE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE","MEDIA_KEYERR_UNKNOWN_MESSAGE","MEDIA_KEYERR_CLIENT_MESSAGE","MEDIA_KEYERR_SERVICE_MESSAGE","MEDIA_KEYERR_OUTPUT_MESSAGE","MEDIA_KEYERR_HARDWARECHANGE_MESSAGE","MEDIA_KEYERR_DOMAIN_MESSAGE","MEDIA_KEY_MESSAGE_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE","SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE","KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE","KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE","KEY_SESSION_CREATED_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE","_inherits","LicenseRequest","method","responseType","withCredentials","messageType","sessionId","LicenseResponse","ProtectionController","logger","pendingKeySessionsToHandle","mediaInfoArr","protDataSet","sessionType","robustnessLevel","selectedKeySystem","keySystemSelectionInProgress","licenseXhrRequest","licenseRequestRetryTimeout","protectionKeyController","protectionModel","eventBus","debug","constants","needkeyRetries","cmcdModel","settings","customParametersModel","checkConfig","Error","_selectKeySystemOrUpdateKeySessions","supportedKs","fromManifest","_handleKeySessions","keySystemAccess","requestedKeySystems","sort","ksA","ksB","ks","systemString","priority","keySystemConfiguration","_getKeySystemConfiguration","configs","protData","requestKeySystemAccess","then","event","selectedSystemString","mksa","selectKeySystem","trigger","KEY_SYSTEM_SELECTED","_getProtDataForKeySystem","serverCertificate","setServerCertificate","error","_selectInitialKeySystem","ksIdx","_loadOrCreateKeySession","keySystemInfo","isClearKey","keys","clearkeys","kids","TextEncoder","encode","loadKeySession","createKeySession","initDataForKS","getPSSHForKeySystem","keyId","sessions","getSessions","getKeyId","_isKeyIdDuplicate","_isInitDataDuplicate","KEY_SESSION_CREATED","keySystemString","currentInitData","getAllInitData","initDataEquals","setMediaElement","element","on","NEED_KEY","_onNeedKey","off","keySystemData","audioRobustness","videoRobustness","ksSessionType","media","codec","_onKeyStatusChanged","KEY_STATUSES_CHANGED","status","_onKeyMessage","keyMessage","KEY_MESSAGE","sessionToken","licenseServerModelInstance","getLicenseServerModelInstance","eventData","getSessionId","_sendLicenseRequestCompleteEvent","processClearKeyLicenseRequest","keyPairs","updateKeySession","licenseServerData","serverURL","laURL","getLicenseServerUrlFromMediaInfo","schemeIdURI","psshData","getPSSHData","getLicenseServerURLFromInitData","getServerURLFromMessage","_getLicenseServerUrl","reqHeaders","_updateHeaders","httpRequestHeaders","getRequestHeadersFromMessage","onLoad","xhr","responseHeaders","parseHttpHeaders","getAllResponseHeaders","licenseResponse","responseURL","response","_applyFilters","getLicenseResponseFilters","licenseMessage","getLicenseMessage","_reportError","onAbort","statusText","readyState","onError","reqPayload","getLicenseRequestFromMessage","reqMethod","getHTTPMethod","getResponseType","timeout","isNaN","httpTimeout","licenseRequest","retryAttempts","streaming","getLicenseRequestFilters","_doLicenseRequest","_issueLicenseRequest","LICENSE_REQUEST_COMPLETE","request","retriesCount","XMLHttpRequest","cmcd","enabled","mode","cmcdParams","getQueryParameter","addAditionalQueryParameterToUrl","open","setRequestHeader","cmcdHeaders","getHeaderParameters","header","_retryRequest","retryInterval","retryIntervals","setTimeout","onload","warn","ontimeout","onerror","onabort","LICENSE_REQUEST_SENDING","payload","send","_abortLicenseRequest","onloadend","onprogress","abort","clearTimeout","errorMsg","getErrorResponse","serverResponse","responseCode","responseText","filters","reduce","prev","next","Promise","retry","protection","ignoreEmeEncryptedEvent","initDataType","abInitData","ArrayBuffer","isView","String","fromCharCode","Uint8Array","getSupportedKeySystemsFromSegmentPssh","_handleKeySystemFromPssh","initializeForMedia","clearMediaInfoArray","handleKeySystemFromManifest","supportedKeySystems","mInfo","currentKs","getSupportedKeySystemsFromContentProtection","removeKeySession","closeKeySession","setSessionType","setRobustnessLevel","level","setProtectionData","cps","getKeySystems","setKeySystems","keySystems","stop","reset","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_STATUS_CHANGED","retryTimeout","getLogger","FactoryMaker","KeyPair","keyID","ClearKeyKeySet","numKeys","jwk","kty","alg","kid","jwkString","buf","bView","ProtectionConstants","CLEARKEY_KEYSTEM_STRING","WIDEVINE_KEYSTEM_STRING","PLAYREADY_KEYSTEM_STRING","PLAYREADY_RECOMMENDATION_KEYSTEM_STRING","INITIALIZATION_DATA_TYPE_CENC","INITIALIZATION_DATA_TYPE_KEYIDS","INITIALIZATION_DATA_TYPE_WEBM","KeySystemClearKey","getInitData","cencContentProtection","parseInitDataFromContentProtection","cencDefaultKid","btoa","parseInt","cencDefaultKidToBase64Representation","getCDMData","getClearKeysFromProtectionData","protectionData","clearkeySet","jsonMsg","clearkeyID","clearkey","dashjs","KeySystemW3CClearKey","KeySystemWidevine","KeySystemPlayReady","messageFormat","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","pro","prheader","setUint32","msg","xmlDoc","DOMParser","detectPlayreadyMessageFormat","dataview","Uint16Array","headerNameList","parseFromString","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","Challenge","decode","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","_cdmData","customData","cdmData","cdmDataBytes","setPlayReadyMessageFormat","DRMToday","license","keySystemStr","PlayReady","soap","uintToString","arrayBuffer","encodedString","decodeURIComponent","escape","parseServerResponse","stringResponse","envelope","getElementsByTagNameNS","body","parseErrorResponse","faultstring","statusCode","idStart","idEnd","fault","detail","exception","node","firstChild","errorString","Widevine","ClearKey","keypair","keyid","ProtectionKeyController","clearkeyKeySystem","clearkeyW3CKeySystem","_getSessionId","_getSessionType","initialize","protectionDataSet","initData1","initData2","data1","data2","newKeySystems","getKeySystemBySystemString","cpIdx","supportedKS","findCencContentProtection","setConfig","_EventsBase","ProtectionEvents","KEY_ADDED","KEY_ERROR","KEY_SESSION_CLOSED","KEY_SESSION_REMOVED","KEY_SYSTEM_ACCESS_COMPLETE","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","KEY_SESSION_UPDATED","NeedKey","KeyMessage","defaultURL","KeySystemAccess","ksConfiguration","SYSTEM_STRING_PRIORITY","ProtectionModel_21Jan2015","videoElement","mediaKeys","eventHandler","_requestKeySystemAccessInternal","ksConfigurations","idx","reject","requestMediaKeySystemAccess","protDataSystemStringPriority","systemStringPriority","currentKeySystem","systemStringsToApply","_checkAccessForSystemStrings","_checkAccessForKeySystem","mediaKeySystemAccess","configuration","getConfiguration","errorMessage","_closeKeySessionInternal","session","removeEventListener","close","removeSession","token","splice","parseKeyStatus","createSessionToken","ksInfo","handleEvent","keyStatuses","keyStatus","getSessionType","getExpirationTime","expiration","getKeyStatuses","getUsable","usable","addEventListener","closed","createMediaKeys","mkeys","setMediaKeys","mediaElement","createSession","dataType","generateRequest","toJWK","update","load","success","remove","numSessions","done","ProtectionModel_3Feb2014","api","needkey","ready","release","boundDoSetKeys","doSetKeys","bind","found","supportedAudio","supportedVideo","configIdx","audios","videos","audioIdx","MediaKeys","isTypeSupported","videoIdx","ksConfig","ksAccess","capabilities","keySession","NaN","destinationURL","ProtectionModel_01b","pendingSessions","moreSessionsAllowed","errHandler","removeEventListeners","cancelKeyRequest","findSessionByID","sessionArray","keyerror","keymessage","keyadded","ve","document","createElement","canPlayType","newSession","generateKeyRequest","addKey","errorCode","systemCode","shift","APIS_ProtectionModel_01b","APIS_ProtectionModel_3Feb2014","Protection","_getAPI","apis","createProtectionSystem","controller","videoModel","getElement","onencrypted","_getProtectionModel","setEncryptedMediaSupported"],"sourceRoot":""}